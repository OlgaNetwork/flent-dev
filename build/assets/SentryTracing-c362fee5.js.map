{"version":3,"file":"SentryTracing-c362fee5.js","sources":["../../../../../../Users/ted/.yarn/berry/cache/@sentry-utils-npm-6.19.7-d61c6c8632-10c0.zip/node_modules/@sentry/utils/esm/tracing.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/flags.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/utils.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/errors.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/constants.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/span.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/transaction.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/idletransaction.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/hubextensions.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/integrations/node/express.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/integrations/node/postgres.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/integrations/node/mysql.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/integrations/node/mongo.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/backgroundtab.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/metrics.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/request.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/router.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/browser/browsertracing.js","../../../../../../Users/ted/.yarn/berry/cache/@sentry-tracing-npm-6.19.7-afb16e2fe4-10c0.zip/node_modules/@sentry/tracing/esm/index.js"],"sourcesContent":["export var TRACEPARENT_REGEXP = new RegExp('^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$');\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent) {\n    var matches = traceparent.match(TRACEPARENT_REGEXP);\n    if (matches) {\n        var parentSampled = void 0;\n        if (matches[3] === '1') {\n            parentSampled = true;\n        }\n        else if (matches[3] === '0') {\n            parentSampled = false;\n        }\n        return {\n            traceId: matches[1],\n            parentSampled: parentSampled,\n            parentSpanId: matches[2],\n        };\n    }\n    return undefined;\n}\n//# sourceMappingURL=tracing.js.map","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n/** Flag that is true for debug builds, false otherwise. */\nexport var IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n//# sourceMappingURL=flags.js.map","import { getCurrentHub } from '@sentry/hub';\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * TODO(v7): Reorganize these exports\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n */\nexport { TRACEPARENT_REGEXP, extractTraceparentData } from '@sentry/utils';\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(maybeOptions) {\n    var client = getCurrentHub().getClient();\n    var options = maybeOptions || (client && client.getOptions());\n    return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction(maybeHub) {\n    var hub = maybeHub || getCurrentHub();\n    var scope = hub.getScope();\n    return scope && scope.getTransaction();\n}\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nexport function msToSec(time) {\n    return time / 1000;\n}\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nexport function secToMs(time) {\n    return time * 1000;\n}\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n//# sourceMappingURL=utils.js.map","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { getActiveTransaction } from './utils';\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation() {\n    addInstrumentationHandler('error', errorCallback);\n    addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var status_1 = 'internal_error';\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] Transaction: \" + status_1 + \" -> Global error occured\");\n        activeTransaction.setStatus(status_1);\n    }\n}\n//# sourceMappingURL=errors.js.map","// Store finish reasons in tuple to save on bundle size\n// Readonly type should enforce that this is not mutated.\nexport var FINISH_REASON_TAG = 'finishReason';\nexport var IDLE_TRANSACTION_FINISH_REASONS = ['heartbeatFailed', 'idleTimeout', 'documentHidden'];\n//# sourceMappingURL=constants.js.map","import { __assign } from \"tslib\";\nimport { dropUndefinedKeys, timestampWithMs, uuid4 } from '@sentry/utils';\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nvar SpanRecorder = /** @class */ (function () {\n    function SpanRecorder(maxlen) {\n        if (maxlen === void 0) { maxlen = 1000; }\n        this.spans = [];\n        this._maxlen = maxlen;\n    }\n    /**\n     * This is just so that we don't run out of memory while recording a lot\n     * of spans. At some point we just stop and flush out the start of the\n     * trace tree (i.e.the first n spans with the smallest\n     * start_timestamp).\n     */\n    SpanRecorder.prototype.add = function (span) {\n        if (this.spans.length > this._maxlen) {\n            span.spanRecorder = undefined;\n        }\n        else {\n            this.spans.push(span);\n        }\n    };\n    return SpanRecorder;\n}());\nexport { SpanRecorder };\n/**\n * Span contains all data about a span\n */\nvar Span = /** @class */ (function () {\n    /**\n     * You should never call the constructor manually, always use `Sentry.startTransaction()`\n     * or call `startChild()` on an existing span.\n     * @internal\n     * @hideconstructor\n     * @hidden\n     */\n    function Span(spanContext) {\n        /**\n         * @inheritDoc\n         */\n        this.traceId = uuid4();\n        /**\n         * @inheritDoc\n         */\n        this.spanId = uuid4().substring(16);\n        /**\n         * Timestamp in seconds when the span was created.\n         */\n        this.startTimestamp = timestampWithMs();\n        /**\n         * @inheritDoc\n         */\n        this.tags = {};\n        /**\n         * @inheritDoc\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.data = {};\n        if (!spanContext) {\n            return this;\n        }\n        if (spanContext.traceId) {\n            this.traceId = spanContext.traceId;\n        }\n        if (spanContext.spanId) {\n            this.spanId = spanContext.spanId;\n        }\n        if (spanContext.parentSpanId) {\n            this.parentSpanId = spanContext.parentSpanId;\n        }\n        // We want to include booleans as well here\n        if ('sampled' in spanContext) {\n            this.sampled = spanContext.sampled;\n        }\n        if (spanContext.op) {\n            this.op = spanContext.op;\n        }\n        if (spanContext.description) {\n            this.description = spanContext.description;\n        }\n        if (spanContext.data) {\n            this.data = spanContext.data;\n        }\n        if (spanContext.tags) {\n            this.tags = spanContext.tags;\n        }\n        if (spanContext.status) {\n            this.status = spanContext.status;\n        }\n        if (spanContext.startTimestamp) {\n            this.startTimestamp = spanContext.startTimestamp;\n        }\n        if (spanContext.endTimestamp) {\n            this.endTimestamp = spanContext.endTimestamp;\n        }\n    }\n    /**\n     * @inheritDoc\n     * @deprecated\n     */\n    Span.prototype.child = function (spanContext) {\n        return this.startChild(spanContext);\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.startChild = function (spanContext) {\n        var childSpan = new Span(__assign(__assign({}, spanContext), { parentSpanId: this.spanId, sampled: this.sampled, traceId: this.traceId }));\n        childSpan.spanRecorder = this.spanRecorder;\n        if (childSpan.spanRecorder) {\n            childSpan.spanRecorder.add(childSpan);\n        }\n        childSpan.transaction = this.transaction;\n        return childSpan;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setTag = function (key, value) {\n        var _a;\n        this.tags = __assign(__assign({}, this.tags), (_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Span.prototype.setData = function (key, value) {\n        var _a;\n        this.data = __assign(__assign({}, this.data), (_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setStatus = function (value) {\n        this.status = value;\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setHttpStatus = function (httpStatus) {\n        this.setTag('http.status_code', String(httpStatus));\n        var spanStatus = spanStatusfromHttpCode(httpStatus);\n        if (spanStatus !== 'unknown_error') {\n            this.setStatus(spanStatus);\n        }\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.isSuccess = function () {\n        return this.status === 'ok';\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.finish = function (endTimestamp) {\n        this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toTraceparent = function () {\n        var sampledString = '';\n        if (this.sampled !== undefined) {\n            sampledString = this.sampled ? '-1' : '-0';\n        }\n        return this.traceId + \"-\" + this.spanId + sampledString;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toContext = function () {\n        return dropUndefinedKeys({\n            data: this.data,\n            description: this.description,\n            endTimestamp: this.endTimestamp,\n            op: this.op,\n            parentSpanId: this.parentSpanId,\n            sampled: this.sampled,\n            spanId: this.spanId,\n            startTimestamp: this.startTimestamp,\n            status: this.status,\n            tags: this.tags,\n            traceId: this.traceId,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.updateWithContext = function (spanContext) {\n        var _a, _b, _c, _d, _e;\n        this.data = (_a = spanContext.data, (_a !== null && _a !== void 0 ? _a : {}));\n        this.description = spanContext.description;\n        this.endTimestamp = spanContext.endTimestamp;\n        this.op = spanContext.op;\n        this.parentSpanId = spanContext.parentSpanId;\n        this.sampled = spanContext.sampled;\n        this.spanId = (_b = spanContext.spanId, (_b !== null && _b !== void 0 ? _b : this.spanId));\n        this.startTimestamp = (_c = spanContext.startTimestamp, (_c !== null && _c !== void 0 ? _c : this.startTimestamp));\n        this.status = spanContext.status;\n        this.tags = (_d = spanContext.tags, (_d !== null && _d !== void 0 ? _d : {}));\n        this.traceId = (_e = spanContext.traceId, (_e !== null && _e !== void 0 ? _e : this.traceId));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.getTraceContext = function () {\n        return dropUndefinedKeys({\n            data: Object.keys(this.data).length > 0 ? this.data : undefined,\n            description: this.description,\n            op: this.op,\n            parent_span_id: this.parentSpanId,\n            span_id: this.spanId,\n            status: this.status,\n            tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n            trace_id: this.traceId,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toJSON = function () {\n        return dropUndefinedKeys({\n            data: Object.keys(this.data).length > 0 ? this.data : undefined,\n            description: this.description,\n            op: this.op,\n            parent_span_id: this.parentSpanId,\n            span_id: this.spanId,\n            start_timestamp: this.startTimestamp,\n            status: this.status,\n            tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n            timestamp: this.endTimestamp,\n            trace_id: this.traceId,\n        });\n    };\n    return Span;\n}());\nexport { Span };\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function spanStatusfromHttpCode(httpStatus) {\n    if (httpStatus < 400 && httpStatus >= 100) {\n        return 'ok';\n    }\n    if (httpStatus >= 400 && httpStatus < 500) {\n        switch (httpStatus) {\n            case 401:\n                return 'unauthenticated';\n            case 403:\n                return 'permission_denied';\n            case 404:\n                return 'not_found';\n            case 409:\n                return 'already_exists';\n            case 413:\n                return 'failed_precondition';\n            case 429:\n                return 'resource_exhausted';\n            default:\n                return 'invalid_argument';\n        }\n    }\n    if (httpStatus >= 500 && httpStatus < 600) {\n        switch (httpStatus) {\n            case 501:\n                return 'unimplemented';\n            case 503:\n                return 'unavailable';\n            case 504:\n                return 'deadline_exceeded';\n            default:\n                return 'internal_error';\n        }\n    }\n    return 'unknown_error';\n}\n//# sourceMappingURL=span.js.map","import { __assign, __extends } from \"tslib\";\nimport { getCurrentHub, Hub } from '@sentry/hub';\nimport { dropUndefinedKeys, isInstanceOf, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { Span as SpanClass, SpanRecorder } from './span';\n/** JSDoc */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor should never be called manually. Those instrumenting tracing should use\n     * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n     * @internal\n     * @hideconstructor\n     * @hidden\n     */\n    function Transaction(transactionContext, hub) {\n        var _this = _super.call(this, transactionContext) || this;\n        _this._measurements = {};\n        /**\n         * The reference to the current hub.\n         */\n        _this._hub = getCurrentHub();\n        if (isInstanceOf(hub, Hub)) {\n            _this._hub = hub;\n        }\n        _this.name = transactionContext.name || '';\n        _this.metadata = transactionContext.metadata || {};\n        _this._trimEnd = transactionContext.trimEnd;\n        // this is because transactions are also spans, and spans have a transaction pointer\n        _this.transaction = _this;\n        return _this;\n    }\n    /**\n     * JSDoc\n     */\n    Transaction.prototype.setName = function (name) {\n        this.name = name;\n    };\n    /**\n     * Attaches SpanRecorder to the span itself\n     * @param maxlen maximum number of spans that can be recorded\n     */\n    Transaction.prototype.initSpanRecorder = function (maxlen) {\n        if (maxlen === void 0) { maxlen = 1000; }\n        if (!this.spanRecorder) {\n            this.spanRecorder = new SpanRecorder(maxlen);\n        }\n        this.spanRecorder.add(this);\n    };\n    /**\n     * Set observed measurements for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMeasurements = function (measurements) {\n        this._measurements = __assign({}, measurements);\n    };\n    /**\n     * Set metadata for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMetadata = function (newMetadata) {\n        this.metadata = __assign(__assign({}, this.metadata), newMetadata);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.finish = function (endTimestamp) {\n        var _this = this;\n        // This transaction is already finished, so we should not flush it again.\n        if (this.endTimestamp !== undefined) {\n            return undefined;\n        }\n        if (!this.name) {\n            IS_DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n            this.name = '<unlabeled transaction>';\n        }\n        // just sets the end timestamp\n        _super.prototype.finish.call(this, endTimestamp);\n        if (this.sampled !== true) {\n            // At this point if `sampled !== true` we want to discard the transaction.\n            IS_DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n            var client = this._hub.getClient();\n            var transport = client && client.getTransport && client.getTransport();\n            if (transport && transport.recordLostEvent) {\n                transport.recordLostEvent('sample_rate', 'transaction');\n            }\n            return undefined;\n        }\n        var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(function (s) { return s !== _this && s.endTimestamp; }) : [];\n        if (this._trimEnd && finishedSpans.length > 0) {\n            this.endTimestamp = finishedSpans.reduce(function (prev, current) {\n                if (prev.endTimestamp && current.endTimestamp) {\n                    return prev.endTimestamp > current.endTimestamp ? prev : current;\n                }\n                return prev;\n            }).endTimestamp;\n        }\n        var transaction = {\n            contexts: {\n                trace: this.getTraceContext(),\n            },\n            spans: finishedSpans,\n            start_timestamp: this.startTimestamp,\n            tags: this.tags,\n            timestamp: this.endTimestamp,\n            transaction: this.name,\n            type: 'transaction',\n            sdkProcessingMetadata: this.metadata,\n        };\n        var hasMeasurements = Object.keys(this._measurements).length > 0;\n        if (hasMeasurements) {\n            IS_DEBUG_BUILD &&\n                logger.log('[Measurements] Adding measurements to transaction', JSON.stringify(this._measurements, undefined, 2));\n            transaction.measurements = this._measurements;\n        }\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] Finishing \" + this.op + \" transaction: \" + this.name + \".\");\n        return this._hub.captureEvent(transaction);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.toContext = function () {\n        var spanContext = _super.prototype.toContext.call(this);\n        return dropUndefinedKeys(__assign(__assign({}, spanContext), { name: this.name, trimEnd: this._trimEnd }));\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.updateWithContext = function (transactionContext) {\n        var _a;\n        _super.prototype.updateWithContext.call(this, transactionContext);\n        this.name = (_a = transactionContext.name, (_a !== null && _a !== void 0 ? _a : ''));\n        this._trimEnd = transactionContext.trimEnd;\n        return this;\n    };\n    return Transaction;\n}(SpanClass));\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map","import { __extends, __values } from \"tslib\";\nimport { logger, timestampWithMs } from '@sentry/utils';\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from './constants';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { SpanRecorder } from './span';\nimport { Transaction } from './transaction';\nexport var DEFAULT_IDLE_TIMEOUT = 1000;\nexport var HEARTBEAT_INTERVAL = 5000;\n/**\n * @inheritDoc\n */\nvar IdleTransactionSpanRecorder = /** @class */ (function (_super) {\n    __extends(IdleTransactionSpanRecorder, _super);\n    function IdleTransactionSpanRecorder(_pushActivity, _popActivity, transactionSpanId, maxlen) {\n        if (transactionSpanId === void 0) { transactionSpanId = ''; }\n        var _this = _super.call(this, maxlen) || this;\n        _this._pushActivity = _pushActivity;\n        _this._popActivity = _popActivity;\n        _this.transactionSpanId = transactionSpanId;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    IdleTransactionSpanRecorder.prototype.add = function (span) {\n        var _this = this;\n        // We should make sure we do not push and pop activities for\n        // the transaction that this span recorder belongs to.\n        if (span.spanId !== this.transactionSpanId) {\n            // We patch span.finish() to pop an activity after setting an endTimestamp.\n            span.finish = function (endTimestamp) {\n                span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n                _this._popActivity(span.spanId);\n            };\n            // We should only push new activities if the span does not have an end timestamp.\n            if (span.endTimestamp === undefined) {\n                this._pushActivity(span.spanId);\n            }\n        }\n        _super.prototype.add.call(this, span);\n    };\n    return IdleTransactionSpanRecorder;\n}(SpanRecorder));\nexport { IdleTransactionSpanRecorder };\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nvar IdleTransaction = /** @class */ (function (_super) {\n    __extends(IdleTransaction, _super);\n    function IdleTransaction(transactionContext, _idleHub, \n    /**\n     * The time to wait in ms until the idle transaction will be finished.\n     * @default 1000\n     */\n    _idleTimeout, \n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n    _onScope) {\n        if (_idleTimeout === void 0) { _idleTimeout = DEFAULT_IDLE_TIMEOUT; }\n        if (_onScope === void 0) { _onScope = false; }\n        var _this = _super.call(this, transactionContext, _idleHub) || this;\n        _this._idleHub = _idleHub;\n        _this._idleTimeout = _idleTimeout;\n        _this._onScope = _onScope;\n        // Activities store a list of active spans\n        _this.activities = {};\n        // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n        _this._heartbeatCounter = 0;\n        // We should not use heartbeat if we finished a transaction\n        _this._finished = false;\n        _this._beforeFinishCallbacks = [];\n        if (_idleHub && _onScope) {\n            // There should only be one active transaction on the scope\n            clearActiveTransaction(_idleHub);\n            // We set the transaction here on the scope so error events pick up the trace\n            // context and attach it to the error.\n            IS_DEBUG_BUILD && logger.log(\"Setting idle transaction on scope. Span ID: \" + _this.spanId);\n            _idleHub.configureScope(function (scope) { return scope.setSpan(_this); });\n        }\n        _this._initTimeout = setTimeout(function () {\n            if (!_this._finished) {\n                _this.finish();\n            }\n        }, _this._idleTimeout);\n        return _this;\n    }\n    /** {@inheritDoc} */\n    IdleTransaction.prototype.finish = function (endTimestamp) {\n        var e_1, _a;\n        var _this = this;\n        if (endTimestamp === void 0) { endTimestamp = timestampWithMs(); }\n        this._finished = true;\n        this.activities = {};\n        if (this.spanRecorder) {\n            IS_DEBUG_BUILD &&\n                logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n            try {\n                for (var _b = __values(this._beforeFinishCallbacks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var callback = _c.value;\n                    callback(this, endTimestamp);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.spanRecorder.spans = this.spanRecorder.spans.filter(function (span) {\n                // If we are dealing with the transaction itself, we just return it\n                if (span.spanId === _this.spanId) {\n                    return true;\n                }\n                // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n                if (!span.endTimestamp) {\n                    span.endTimestamp = endTimestamp;\n                    span.setStatus('cancelled');\n                    IS_DEBUG_BUILD &&\n                        logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n                }\n                var keepSpan = span.startTimestamp < endTimestamp;\n                if (!keepSpan) {\n                    IS_DEBUG_BUILD &&\n                        logger.log('[Tracing] discarding Span since it happened after Transaction was finished', JSON.stringify(span, undefined, 2));\n                }\n                return keepSpan;\n            });\n            IS_DEBUG_BUILD && logger.log('[Tracing] flushing IdleTransaction');\n        }\n        else {\n            IS_DEBUG_BUILD && logger.log('[Tracing] No active IdleTransaction');\n        }\n        // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n        if (this._onScope) {\n            clearActiveTransaction(this._idleHub);\n        }\n        return _super.prototype.finish.call(this, endTimestamp);\n    };\n    /**\n     * Register a callback function that gets excecuted before the transaction finishes.\n     * Useful for cleanup or if you want to add any additional spans based on current context.\n     *\n     * This is exposed because users have no other way of running something before an idle transaction\n     * finishes.\n     */\n    IdleTransaction.prototype.registerBeforeFinishCallback = function (callback) {\n        this._beforeFinishCallbacks.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    IdleTransaction.prototype.initSpanRecorder = function (maxlen) {\n        var _this = this;\n        if (!this.spanRecorder) {\n            var pushActivity = function (id) {\n                if (_this._finished) {\n                    return;\n                }\n                _this._pushActivity(id);\n            };\n            var popActivity = function (id) {\n                if (_this._finished) {\n                    return;\n                }\n                _this._popActivity(id);\n            };\n            this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n            // Start heartbeat so that transactions do not run forever.\n            IS_DEBUG_BUILD && logger.log('Starting heartbeat');\n            this._pingHeartbeat();\n        }\n        this.spanRecorder.add(this);\n    };\n    /**\n     * Start tracking a specific activity.\n     * @param spanId The span id that represents the activity\n     */\n    IdleTransaction.prototype._pushActivity = function (spanId) {\n        if (this._initTimeout) {\n            clearTimeout(this._initTimeout);\n            this._initTimeout = undefined;\n        }\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] pushActivity: \" + spanId);\n        this.activities[spanId] = true;\n        IS_DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    };\n    /**\n     * Remove an activity from usage\n     * @param spanId The span id that represents the activity\n     */\n    IdleTransaction.prototype._popActivity = function (spanId) {\n        var _this = this;\n        if (this.activities[spanId]) {\n            IS_DEBUG_BUILD && logger.log(\"[Tracing] popActivity \" + spanId);\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete this.activities[spanId];\n            IS_DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n        }\n        if (Object.keys(this.activities).length === 0) {\n            var timeout = this._idleTimeout;\n            // We need to add the timeout here to have the real endtimestamp of the transaction\n            // Remember timestampWithMs is in seconds, timeout is in ms\n            var end_1 = timestampWithMs() + timeout / 1000;\n            setTimeout(function () {\n                if (!_this._finished) {\n                    _this.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[1]);\n                    _this.finish(end_1);\n                }\n            }, timeout);\n        }\n    };\n    /**\n     * Checks when entries of this.activities are not changing for 3 beats.\n     * If this occurs we finish the transaction.\n     */\n    IdleTransaction.prototype._beat = function () {\n        // We should not be running heartbeat if the idle transaction is finished.\n        if (this._finished) {\n            return;\n        }\n        var heartbeatString = Object.keys(this.activities).join('');\n        if (heartbeatString === this._prevHeartbeatString) {\n            this._heartbeatCounter += 1;\n        }\n        else {\n            this._heartbeatCounter = 1;\n        }\n        this._prevHeartbeatString = heartbeatString;\n        if (this._heartbeatCounter >= 3) {\n            IS_DEBUG_BUILD && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n            this.setStatus('deadline_exceeded');\n            this.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[0]);\n            this.finish();\n        }\n        else {\n            this._pingHeartbeat();\n        }\n    };\n    /**\n     * Pings the heartbeat\n     */\n    IdleTransaction.prototype._pingHeartbeat = function () {\n        var _this = this;\n        IS_DEBUG_BUILD && logger.log(\"pinging Heartbeat -> current counter: \" + this._heartbeatCounter);\n        setTimeout(function () {\n            _this._beat();\n        }, HEARTBEAT_INTERVAL);\n    };\n    return IdleTransaction;\n}(Transaction));\nexport { IdleTransaction };\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n    if (hub) {\n        var scope = hub.getScope();\n        if (scope) {\n            var transaction = scope.getTransaction();\n            if (transaction) {\n                scope.setSpan(undefined);\n            }\n        }\n    }\n}\n//# sourceMappingURL=idletransaction.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { getMainCarrier } from '@sentry/hub';\nimport { dynamicRequire, isNaN, isNodeEnv, loadModule, logger } from '@sentry/utils';\nimport { registerErrorInstrumentation } from './errors';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { IdleTransaction } from './idletransaction';\nimport { Transaction } from './transaction';\nimport { hasTracingEnabled } from './utils';\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n    var scope = this.getScope();\n    if (scope) {\n        var span = scope.getSpan();\n        if (span) {\n            return {\n                'sentry-trace': span.toTraceparent(),\n            };\n        }\n    }\n    return {};\n}\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(transaction, options, samplingContext) {\n    // nothing to do if tracing is not enabled\n    if (!hasTracingEnabled(options)) {\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n    if (transaction.sampled !== undefined) {\n        transaction.setMetadata({\n            transactionSampling: { method: 'explicitly_set' },\n        });\n        return transaction;\n    }\n    // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n    // work; prefer the hook if so\n    var sampleRate;\n    if (typeof options.tracesSampler === 'function') {\n        sampleRate = options.tracesSampler(samplingContext);\n        transaction.setMetadata({\n            transactionSampling: {\n                method: 'client_sampler',\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    else if (samplingContext.parentSampled !== undefined) {\n        sampleRate = samplingContext.parentSampled;\n        transaction.setMetadata({\n            transactionSampling: { method: 'inheritance' },\n        });\n    }\n    else {\n        sampleRate = options.tracesSampleRate;\n        transaction.setMetadata({\n            transactionSampling: {\n                method: 'client_rate',\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n    // only valid values are booleans or numbers between 0 and 1.)\n    if (!isValidSampleRate(sampleRate)) {\n        IS_DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n    if (!sampleRate) {\n        IS_DEBUG_BUILD &&\n            logger.log(\"[Tracing] Discarding transaction because \" + (typeof options.tracesSampler === 'function'\n                ? 'tracesSampler returned 0 or false'\n                : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'));\n        transaction.sampled = false;\n        return transaction;\n    }\n    // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n    // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n    transaction.sampled = Math.random() < sampleRate;\n    // if we're not going to keep it, we're done\n    if (!transaction.sampled) {\n        IS_DEBUG_BUILD &&\n            logger.log(\"[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = \" + Number(sampleRate) + \")\");\n        return transaction;\n    }\n    IS_DEBUG_BUILD && logger.log(\"[Tracing] starting \" + transaction.op + \" transaction - \" + transaction.name);\n    return transaction;\n}\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n    // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n        IS_DEBUG_BUILD &&\n            logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got \" + JSON.stringify(rate) + \" of type \" + JSON.stringify(typeof rate) + \".\");\n        return false;\n    }\n    // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n    if (rate < 0 || rate > 1) {\n        IS_DEBUG_BUILD &&\n            logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got \" + rate + \".\");\n        return false;\n    }\n    return true;\n}\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(transactionContext, customSamplingContext) {\n    var client = this.getClient();\n    var options = (client && client.getOptions()) || {};\n    var transaction = new Transaction(transactionContext, this);\n    transaction = sample(transaction, options, __assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder(options._experiments && options._experiments.maxSpans);\n    }\n    return transaction;\n}\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(hub, transactionContext, idleTimeout, onScope, customSamplingContext) {\n    var client = hub.getClient();\n    var options = (client && client.getOptions()) || {};\n    var transaction = new IdleTransaction(transactionContext, hub, idleTimeout, onScope);\n    transaction = sample(transaction, options, __assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder(options._experiments && options._experiments.maxSpans);\n    }\n    return transaction;\n}\n/**\n * @private\n */\nexport function _addTracingExtensions() {\n    var carrier = getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n    if (!carrier.__SENTRY__.extensions.startTransaction) {\n        carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n    }\n    if (!carrier.__SENTRY__.extensions.traceHeaders) {\n        carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n    }\n}\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n    var carrier = getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    var packageToIntegrationMapping = {\n        mongodb: function () {\n            var integration = dynamicRequire(module, './integrations/node/mongo');\n            return new integration.Mongo();\n        },\n        mongoose: function () {\n            var integration = dynamicRequire(module, './integrations/node/mongo');\n            return new integration.Mongo({ mongoose: true });\n        },\n        mysql: function () {\n            var integration = dynamicRequire(module, './integrations/node/mysql');\n            return new integration.Mysql();\n        },\n        pg: function () {\n            var integration = dynamicRequire(module, './integrations/node/postgres');\n            return new integration.Postgres();\n        },\n    };\n    var mappedPackages = Object.keys(packageToIntegrationMapping)\n        .filter(function (moduleName) { return !!loadModule(moduleName); })\n        .map(function (pkg) {\n        try {\n            return packageToIntegrationMapping[pkg]();\n        }\n        catch (e) {\n            return undefined;\n        }\n    })\n        .filter(function (p) { return p; });\n    if (mappedPackages.length > 0) {\n        carrier.__SENTRY__.integrations = __spread((carrier.__SENTRY__.integrations || []), mappedPackages);\n    }\n}\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nexport function addExtensionMethods() {\n    _addTracingExtensions();\n    // Detect and automatically load specified integrations.\n    if (isNodeEnv()) {\n        _autoloadDatabaseIntegrations();\n    }\n    // If an error happens globally, we should make sure transaction status is set to error.\n    registerErrorInstrumentation();\n}\n//# sourceMappingURL=hubextensions.js.map","import { __read, __spread } from \"tslib\";\nimport { logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../../flags';\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nvar Express = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Express(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Express.id;\n        this._router = options.router || options.app;\n        this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n    }\n    /**\n     * @inheritDoc\n     */\n    Express.prototype.setupOnce = function () {\n        if (!this._router) {\n            IS_DEBUG_BUILD && logger.error('ExpressIntegration is missing an Express instance');\n            return;\n        }\n        instrumentMiddlewares(this._router, this._methods);\n    };\n    /**\n     * @inheritDoc\n     */\n    Express.id = 'Express';\n    return Express;\n}());\nexport { Express };\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn, method) {\n    var arity = fn.length;\n    switch (arity) {\n        case 2: {\n            return function (req, res) {\n                var transaction = res.__sentry_transaction;\n                if (transaction) {\n                    var span_1 = transaction.startChild({\n                        description: fn.name,\n                        op: \"express.middleware.\" + method,\n                    });\n                    res.once('finish', function () {\n                        span_1.finish();\n                    });\n                }\n                return fn.call(this, req, res);\n            };\n        }\n        case 3: {\n            return function (req, res, next) {\n                var _a;\n                var transaction = res.__sentry_transaction;\n                var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n                    description: fn.name,\n                    op: \"express.middleware.\" + method,\n                });\n                fn.call(this, req, res, function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var _a;\n                    (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                    next.call.apply(next, __spread([this], args));\n                });\n            };\n        }\n        case 4: {\n            return function (err, req, res, next) {\n                var _a;\n                var transaction = res.__sentry_transaction;\n                var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n                    description: fn.name,\n                    op: \"express.middleware.\" + method,\n                });\n                fn.call(this, err, req, res, function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var _a;\n                    (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                    next.call.apply(next, __spread([this], args));\n                });\n            };\n        }\n        default: {\n            throw new Error(\"Express middleware takes 2-4 arguments. Got: \" + arity);\n        }\n    }\n}\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args, method) {\n    return args.map(function (arg) {\n        if (typeof arg === 'function') {\n            return wrap(arg, method);\n        }\n        if (Array.isArray(arg)) {\n            return arg.map(function (a) {\n                if (typeof a === 'function') {\n                    return wrap(a, method);\n                }\n                return a;\n            });\n        }\n        return arg;\n    });\n}\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router, method) {\n    var originalCallback = router[method];\n    router[method] = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return originalCallback.call.apply(originalCallback, __spread([this], wrapMiddlewareArgs(args, method)));\n    };\n    return router;\n}\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router, methods) {\n    if (methods === void 0) { methods = []; }\n    methods.forEach(function (method) { return patchMiddleware(router, method); });\n}\n//# sourceMappingURL=express.js.map","import { fill, isThenable, loadModule, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../../flags';\n/** Tracing integration for node-postgres package */\nvar Postgres = /** @class */ (function () {\n    function Postgres(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Postgres.id;\n        this._usePgNative = !!options.usePgNative;\n    }\n    /**\n     * @inheritDoc\n     */\n    Postgres.prototype.setupOnce = function (_, getCurrentHub) {\n        var _a;\n        var pkg = loadModule('pg');\n        if (!pkg) {\n            IS_DEBUG_BUILD && logger.error('Postgres Integration was unable to require `pg` package.');\n            return;\n        }\n        if (this._usePgNative && !((_a = pkg.native) === null || _a === void 0 ? void 0 : _a.Client)) {\n            IS_DEBUG_BUILD && logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n            return;\n        }\n        var Client = (this._usePgNative ? pkg.native : pkg).Client;\n        /**\n         * function (query, callback) => void\n         * function (query, params, callback) => void\n         * function (query) => Promise\n         * function (query, params) => Promise\n         * function (pg.Cursor) => pg.Cursor\n         */\n        fill(Client.prototype, 'query', function (orig) {\n            return function (config, values, callback) {\n                var _a, _b, _c;\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n                    description: typeof config === 'string' ? config : config.text,\n                    op: 'db',\n                });\n                if (typeof callback === 'function') {\n                    return orig.call(this, config, values, function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        callback(err, result);\n                    });\n                }\n                if (typeof values === 'function') {\n                    return orig.call(this, config, function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        values(err, result);\n                    });\n                }\n                var rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n                if (isThenable(rv)) {\n                    return rv.then(function (res) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        return res;\n                    });\n                }\n                (_c = span) === null || _c === void 0 ? void 0 : _c.finish();\n                return rv;\n            };\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Postgres.id = 'Postgres';\n    return Postgres;\n}());\nexport { Postgres };\n//# sourceMappingURL=postgres.js.map","import { fill, loadModule, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../../flags';\n/** Tracing integration for node-mysql package */\nvar Mysql = /** @class */ (function () {\n    function Mysql() {\n        /**\n         * @inheritDoc\n         */\n        this.name = Mysql.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    Mysql.prototype.setupOnce = function (_, getCurrentHub) {\n        var pkg = loadModule('mysql/lib/Connection.js');\n        if (!pkg) {\n            IS_DEBUG_BUILD && logger.error('Mysql Integration was unable to require `mysql` package.');\n            return;\n        }\n        // The original function will have one of these signatures:\n        //    function (callback) => void\n        //    function (options, callback) => void\n        //    function (options, values, callback) => void\n        fill(pkg, 'createQuery', function (orig) {\n            return function (options, values, callback) {\n                var _a, _b;\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n                    description: typeof options === 'string' ? options : options.sql,\n                    op: 'db',\n                });\n                if (typeof callback === 'function') {\n                    return orig.call(this, options, values, function (err, result, fields) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        callback(err, result, fields);\n                    });\n                }\n                if (typeof values === 'function') {\n                    return orig.call(this, options, function (err, result, fields) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        values(err, result, fields);\n                    });\n                }\n                return orig.call(this, options, values, callback);\n            };\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Mysql.id = 'Mysql';\n    return Mysql;\n}());\nexport { Mysql };\n//# sourceMappingURL=mysql.js.map","import { __read, __spread } from \"tslib\";\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../../flags';\nvar OPERATIONS = [\n    'aggregate',\n    'bulkWrite',\n    'countDocuments',\n    'createIndex',\n    'createIndexes',\n    'deleteMany',\n    'deleteOne',\n    'distinct',\n    'drop',\n    'dropIndex',\n    'dropIndexes',\n    'estimatedDocumentCount',\n    'find',\n    'findOne',\n    'findOneAndDelete',\n    'findOneAndReplace',\n    'findOneAndUpdate',\n    'indexes',\n    'indexExists',\n    'indexInformation',\n    'initializeOrderedBulkOp',\n    'insertMany',\n    'insertOne',\n    'isCapped',\n    'mapReduce',\n    'options',\n    'parallelCollectionScan',\n    'rename',\n    'replaceOne',\n    'stats',\n    'updateMany',\n    'updateOne',\n];\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nvar OPERATION_SIGNATURES = {\n    // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n    // see https://github.com/getsentry/sentry-javascript/pull/3102\n    bulkWrite: ['operations'],\n    countDocuments: ['query'],\n    createIndex: ['fieldOrSpec'],\n    createIndexes: ['indexSpecs'],\n    deleteMany: ['filter'],\n    deleteOne: ['filter'],\n    distinct: ['key', 'query'],\n    dropIndex: ['indexName'],\n    find: ['query'],\n    findOne: ['query'],\n    findOneAndDelete: ['filter'],\n    findOneAndReplace: ['filter', 'replacement'],\n    findOneAndUpdate: ['filter', 'update'],\n    indexExists: ['indexes'],\n    insertMany: ['docs'],\n    insertOne: ['doc'],\n    mapReduce: ['map', 'reduce'],\n    rename: ['newName'],\n    replaceOne: ['filter', 'doc'],\n    updateMany: ['filter', 'update'],\n    updateOne: ['filter', 'update'],\n};\n/** Tracing integration for mongo package */\nvar Mongo = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Mongo(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Mongo.id;\n        this._operations = Array.isArray(options.operations) ? options.operations : OPERATIONS;\n        this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n        this._useMongoose = !!options.useMongoose;\n    }\n    /**\n     * @inheritDoc\n     */\n    Mongo.prototype.setupOnce = function (_, getCurrentHub) {\n        var moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n        var pkg = loadModule(moduleName);\n        if (!pkg) {\n            IS_DEBUG_BUILD && logger.error(\"Mongo Integration was unable to require `\" + moduleName + \"` package.\");\n            return;\n        }\n        this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n    };\n    /**\n     * Patches original collection methods\n     */\n    Mongo.prototype._instrumentOperations = function (collection, operations, getCurrentHub) {\n        var _this = this;\n        operations.forEach(function (operation) { return _this._patchOperation(collection, operation, getCurrentHub); });\n    };\n    /**\n     * Patches original collection to utilize our tracing functionality\n     */\n    Mongo.prototype._patchOperation = function (collection, operation, getCurrentHub) {\n        if (!(operation in collection.prototype))\n            return;\n        var getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n        fill(collection.prototype, operation, function (orig) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _a, _b, _c, _d;\n                var lastArg = args[args.length - 1];\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                // Check if the operation was passed a callback. (mapReduce requires a different check, as\n                // its (non-callback) arguments can also be functions.)\n                if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n                    var span_1 = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild(getSpanContext(this, operation, args));\n                    var maybePromise = orig.call.apply(orig, __spread([this], args));\n                    if (isThenable(maybePromise)) {\n                        return maybePromise.then(function (res) {\n                            var _a;\n                            (_a = span_1) === null || _a === void 0 ? void 0 : _a.finish();\n                            return res;\n                        });\n                    }\n                    else {\n                        (_c = span_1) === null || _c === void 0 ? void 0 : _c.finish();\n                        return maybePromise;\n                    }\n                }\n                var span = (_d = parentSpan) === null || _d === void 0 ? void 0 : _d.startChild(getSpanContext(this, operation, args.slice(0, -1)));\n                return orig.call.apply(orig, __spread([this], args.slice(0, -1), [function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        lastArg(err, result);\n                    }]));\n            };\n        });\n    };\n    /**\n     * Form a SpanContext based on the user input to a given operation.\n     */\n    Mongo.prototype._getSpanContextFromOperationArguments = function (collection, operation, args) {\n        var data = {\n            collectionName: collection.collectionName,\n            dbName: collection.dbName,\n            namespace: collection.namespace,\n        };\n        var spanContext = {\n            op: 'db',\n            description: operation,\n            data: data,\n        };\n        // If the operation takes no arguments besides `options` and `callback`, or if argument\n        // collection is disabled for this operation, just return early.\n        var signature = OPERATION_SIGNATURES[operation];\n        var shouldDescribe = Array.isArray(this._describeOperations)\n            ? this._describeOperations.includes(operation)\n            : this._describeOperations;\n        if (!signature || !shouldDescribe) {\n            return spanContext;\n        }\n        try {\n            // Special case for `mapReduce`, as the only one accepting functions as arguments.\n            if (operation === 'mapReduce') {\n                var _a = __read(args, 2), map = _a[0], reduce = _a[1];\n                data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n                data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n            }\n            else {\n                for (var i = 0; i < signature.length; i++) {\n                    data[signature[i]] = JSON.stringify(args[i]);\n                }\n            }\n        }\n        catch (_oO) {\n            // no-empty\n        }\n        return spanContext;\n    };\n    /**\n     * @inheritDoc\n     */\n    Mongo.id = 'Mongo';\n    return Mongo;\n}());\nexport { Mongo };\n//# sourceMappingURL=mongo.js.map","import { getGlobalObject, logger } from '@sentry/utils';\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from '../constants';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { getActiveTransaction } from '../utils';\nvar global = getGlobalObject();\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection() {\n    if (global && global.document) {\n        global.document.addEventListener('visibilitychange', function () {\n            var activeTransaction = getActiveTransaction();\n            if (global.document.hidden && activeTransaction) {\n                var statusType = 'cancelled';\n                IS_DEBUG_BUILD &&\n                    logger.log(\"[Tracing] Transaction: \" + statusType + \" -> since tab moved to the background, op: \" + activeTransaction.op);\n                // We should not set status if it is already set, this prevent important statuses like\n                // error or data loss from being overwritten on transaction.\n                if (!activeTransaction.status) {\n                    activeTransaction.setStatus(statusType);\n                }\n                activeTransaction.setTag('visibilitychange', 'document.hidden');\n                activeTransaction.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[2]);\n                activeTransaction.finish();\n            }\n        });\n    }\n    else {\n        IS_DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n    }\n}\n//# sourceMappingURL=backgroundtab.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var bindReporter = function (callback, metric, reportAllChanges) {\n    var prevValue;\n    return function (forceReport) {\n        if (metric.value >= 0) {\n            if (forceReport || reportAllChanges) {\n                metric.delta = metric.value - (prevValue || 0);\n                // Report the metric if there's a non-zero delta or if no previous\n                // value exists (which can happen in the case of the document becoming\n                // hidden when the metric value is 0).\n                // See: https://github.com/GoogleChrome/web-vitals/issues/14\n                if (metric.delta || prevValue === undefined) {\n                    prevValue = metric.value;\n                    callback(metric);\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=bindReporter.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport var generateUniqueID = function () {\n    return \"v2-\" + Date.now() + \"-\" + (Math.floor(Math.random() * (9e12 - 1)) + 1e12);\n};\n//# sourceMappingURL=generateUniqueID.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { generateUniqueID } from './generateUniqueID';\nexport var initMetric = function (name, value) {\n    return {\n        name: name,\n        value: (value !== null && value !== void 0 ? value : -1),\n        delta: 0,\n        entries: [],\n        id: generateUniqueID(),\n    };\n};\n//# sourceMappingURL=initMetric.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport var observe = function (type, callback) {\n    try {\n        if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n            // More extensive feature detect needed for Firefox due to:\n            // https://github.com/GoogleChrome/web-vitals/issues/142\n            if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n                return;\n            }\n            var po = new PerformanceObserver(function (l) { return l.getEntries().map(callback); });\n            po.observe({ type: type, buffered: true });\n            return po;\n        }\n    }\n    catch (e) {\n        // Do nothing.\n    }\n    return;\n};\n//# sourceMappingURL=observe.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nexport var onHidden = function (cb, once) {\n    var onHiddenOrPageHide = function (event) {\n        if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n            cb(event);\n            if (once) {\n                removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n                removeEventListener('pagehide', onHiddenOrPageHide, true);\n            }\n        }\n    };\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n//# sourceMappingURL=onHidden.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getCLS = function (onReport, reportAllChanges) {\n    var metric = initMetric('CLS', 0);\n    var report;\n    var sessionValue = 0;\n    var sessionEntries = [];\n    var entryHandler = function (entry) {\n        // Only count layout shifts without recent user input.\n        // TODO: Figure out why entry can be undefined\n        if (entry && !entry.hadRecentInput) {\n            var firstSessionEntry = sessionEntries[0];\n            var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n            // If the entry occurred less than 1 second after the previous entry and\n            // less than 5 seconds after the first entry in the session, include the\n            // entry in the current session. Otherwise, start a new session.\n            if (sessionValue &&\n                sessionEntries.length !== 0 &&\n                entry.startTime - lastSessionEntry.startTime < 1000 &&\n                entry.startTime - firstSessionEntry.startTime < 5000) {\n                sessionValue += entry.value;\n                sessionEntries.push(entry);\n            }\n            else {\n                sessionValue = entry.value;\n                sessionEntries = [entry];\n            }\n            // If the current session value is larger than the current CLS value,\n            // update CLS and the entries contributing to it.\n            if (sessionValue > metric.value) {\n                metric.value = sessionValue;\n                metric.entries = sessionEntries;\n                if (report) {\n                    report();\n                }\n            }\n        }\n    };\n    var po = observe('layout-shift', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            report(true);\n        });\n    }\n};\n//# sourceMappingURL=getCLS.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nimport { onHidden } from './onHidden';\nvar firstHiddenTime = -1;\nvar initHiddenTime = function () {\n    return getGlobalObject().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\nvar trackChanges = function () {\n    // Update the time if/when the document becomes hidden.\n    onHidden(function (_a) {\n        var timeStamp = _a.timeStamp;\n        firstHiddenTime = timeStamp;\n    }, true);\n};\nexport var getVisibilityWatcher = function () {\n    if (firstHiddenTime < 0) {\n        // If the document is hidden when this code runs, assume it was hidden\n        // since navigation start. This isn't a perfect heuristic, but it's the\n        // best we can do until an API is available to support querying past\n        // visibilityState.\n        firstHiddenTime = initHiddenTime();\n        trackChanges();\n    }\n    return {\n        get firstHiddenTime() {\n            return firstHiddenTime;\n        },\n    };\n};\n//# sourceMappingURL=getVisibilityWatcher.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getFID = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher();\n    var metric = initMetric('FID');\n    var report;\n    var entryHandler = function (entry) {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n            metric.value = entry.processingStart - entry.startTime;\n            metric.entries.push(entry);\n            report(true);\n        }\n    };\n    var po = observe('first-input', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            po.disconnect();\n        }, true);\n    }\n};\n//# sourceMappingURL=getFID.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nvar reportedMetricIDs = {};\nexport var getLCP = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher();\n    var metric = initMetric('LCP');\n    var report;\n    var entryHandler = function (entry) {\n        // The startTime attribute returns the value of the renderTime if it is not 0,\n        // and the value of the loadTime otherwise.\n        var value = entry.startTime;\n        // If the page was hidden prior to paint time of the entry,\n        // ignore it and mark the metric as final, otherwise add the entry.\n        if (value < visibilityWatcher.firstHiddenTime) {\n            metric.value = value;\n            metric.entries.push(entry);\n        }\n        if (report) {\n            report();\n        }\n    };\n    var po = observe('largest-contentful-paint', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        var stopListening_1 = function () {\n            if (!reportedMetricIDs[metric.id]) {\n                po.takeRecords().map(entryHandler);\n                po.disconnect();\n                reportedMetricIDs[metric.id] = true;\n                report(true);\n            }\n        };\n        // Stop listening after input. Note: while scrolling is an input that\n        // stop LCP observation, it's unreliable since it can be programmatically\n        // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n        ['keydown', 'click'].forEach(function (type) {\n            addEventListener(type, stopListening_1, { once: true, capture: true });\n        });\n        onHidden(stopListening_1, true);\n    }\n};\n//# sourceMappingURL=getLCP.js.map","import { __assign, __rest } from \"tslib\";\nimport { browserPerformanceTimeOrigin, getGlobalObject, htmlTreeAsString, isNodeEnv, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { msToSec } from '../utils';\nimport { getCLS } from './web-vitals/getCLS';\nimport { getFID } from './web-vitals/getFID';\nimport { getLCP } from './web-vitals/getLCP';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher';\nvar global = getGlobalObject();\n/** Class tracking metrics  */\nvar MetricsInstrumentation = /** @class */ (function () {\n    function MetricsInstrumentation(_reportAllChanges) {\n        if (_reportAllChanges === void 0) { _reportAllChanges = false; }\n        this._reportAllChanges = _reportAllChanges;\n        this._measurements = {};\n        this._performanceCursor = 0;\n        if (!isNodeEnv() && global && global.performance && global.document) {\n            if (global.performance.mark) {\n                global.performance.mark('sentry-tracing-init');\n            }\n            this._trackCLS();\n            this._trackLCP();\n            this._trackFID();\n        }\n    }\n    /** Add performance related spans to a transaction */\n    MetricsInstrumentation.prototype.addPerformanceEntries = function (transaction) {\n        var _this = this;\n        if (!global || !global.performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n            // Gatekeeper if performance API not available\n            return;\n        }\n        IS_DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n        var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n        var responseStartTimestamp;\n        var requestStartTimestamp;\n        global.performance\n            .getEntries()\n            .slice(this._performanceCursor)\n            .forEach(function (entry) {\n            var startTime = msToSec(entry.startTime);\n            var duration = msToSec(entry.duration);\n            if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n                return;\n            }\n            switch (entry.entryType) {\n                case 'navigation': {\n                    addNavigationSpans(transaction, entry, timeOrigin);\n                    responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n                    requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n                    break;\n                }\n                case 'mark':\n                case 'paint':\n                case 'measure': {\n                    var startTimestamp = addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n                    // capture web vitals\n                    var firstHidden = getVisibilityWatcher();\n                    // Only report if the page wasn't hidden prior to the web vital.\n                    var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n                    if (entry.name === 'first-paint' && shouldRecord) {\n                        IS_DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n                        _this._measurements['fp'] = { value: entry.startTime };\n                        _this._measurements['mark.fp'] = { value: startTimestamp };\n                    }\n                    if (entry.name === 'first-contentful-paint' && shouldRecord) {\n                        IS_DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n                        _this._measurements['fcp'] = { value: entry.startTime };\n                        _this._measurements['mark.fcp'] = { value: startTimestamp };\n                    }\n                    break;\n                }\n                case 'resource': {\n                    var resourceName = entry.name.replace(global.location.origin, '');\n                    addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n                    break;\n                }\n                default:\n                // Ignore other entry types.\n            }\n        });\n        this._performanceCursor = Math.max(performance.getEntries().length - 1, 0);\n        this._trackNavigator(transaction);\n        // Measurements are only available for pageload transactions\n        if (transaction.op === 'pageload') {\n            // normalize applicable web vital values to be relative to transaction.startTimestamp\n            var timeOrigin_1 = msToSec(browserPerformanceTimeOrigin);\n            // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n            // start of the response in milliseconds\n            if (typeof responseStartTimestamp === 'number') {\n                IS_DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n                this._measurements['ttfb'] = { value: (responseStartTimestamp - transaction.startTimestamp) * 1000 };\n                if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n                    // Capture the time spent making the request and receiving the first byte of the response.\n                    // This is the time between the start of the request and the start of the response in milliseconds.\n                    this._measurements['ttfb.requestTime'] = { value: (responseStartTimestamp - requestStartTimestamp) * 1000 };\n                }\n            }\n            ['fcp', 'fp', 'lcp'].forEach(function (name) {\n                if (!_this._measurements[name] || timeOrigin_1 >= transaction.startTimestamp) {\n                    return;\n                }\n                // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n                // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n                // to be adjusted to be relative to transaction.startTimestamp.\n                var oldValue = _this._measurements[name].value;\n                var measurementTimestamp = timeOrigin_1 + msToSec(oldValue);\n                // normalizedValue should be in milliseconds\n                var normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n                var delta = normalizedValue - oldValue;\n                IS_DEBUG_BUILD &&\n                    logger.log(\"[Measurements] Normalized \" + name + \" from \" + oldValue + \" to \" + normalizedValue + \" (\" + delta + \")\");\n                _this._measurements[name].value = normalizedValue;\n            });\n            if (this._measurements['mark.fid'] && this._measurements['fid']) {\n                // create span for FID\n                _startChild(transaction, {\n                    description: 'first input delay',\n                    endTimestamp: this._measurements['mark.fid'].value + msToSec(this._measurements['fid'].value),\n                    op: 'web.vitals',\n                    startTimestamp: this._measurements['mark.fid'].value,\n                });\n            }\n            // If FCP is not recorded we should not record the cls value\n            // according to the new definition of CLS.\n            if (!('fcp' in this._measurements)) {\n                delete this._measurements.cls;\n            }\n            transaction.setMeasurements(this._measurements);\n            tagMetricInfo(transaction, this._lcpEntry, this._clsEntry);\n            transaction.setTag('sentry_reportAllChanges', this._reportAllChanges);\n        }\n    };\n    /**\n     * Capture the information of the user agent.\n     */\n    MetricsInstrumentation.prototype._trackNavigator = function (transaction) {\n        var navigator = global.navigator;\n        if (!navigator) {\n            return;\n        }\n        // track network connectivity\n        var connection = navigator.connection;\n        if (connection) {\n            if (connection.effectiveType) {\n                transaction.setTag('effectiveConnectionType', connection.effectiveType);\n            }\n            if (connection.type) {\n                transaction.setTag('connectionType', connection.type);\n            }\n            if (isMeasurementValue(connection.rtt)) {\n                this._measurements['connection.rtt'] = { value: connection.rtt };\n            }\n            if (isMeasurementValue(connection.downlink)) {\n                this._measurements['connection.downlink'] = { value: connection.downlink };\n            }\n        }\n        if (isMeasurementValue(navigator.deviceMemory)) {\n            transaction.setTag('deviceMemory', String(navigator.deviceMemory));\n        }\n        if (isMeasurementValue(navigator.hardwareConcurrency)) {\n            transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n        }\n    };\n    /** Starts tracking the Cumulative Layout Shift on the current page. */\n    MetricsInstrumentation.prototype._trackCLS = function () {\n        var _this = this;\n        // See:\n        // https://web.dev/evolving-cls/\n        // https://web.dev/cls-web-tooling/\n        getCLS(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            IS_DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n            _this._measurements['cls'] = { value: metric.value };\n            _this._clsEntry = entry;\n        });\n    };\n    /** Starts tracking the Largest Contentful Paint on the current page. */\n    MetricsInstrumentation.prototype._trackLCP = function () {\n        var _this = this;\n        getLCP(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n            var startTime = msToSec(entry.startTime);\n            IS_DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n            _this._measurements['lcp'] = { value: metric.value };\n            _this._measurements['mark.lcp'] = { value: timeOrigin + startTime };\n            _this._lcpEntry = entry;\n        }, this._reportAllChanges);\n    };\n    /** Starts tracking the First Input Delay on the current page. */\n    MetricsInstrumentation.prototype._trackFID = function () {\n        var _this = this;\n        getFID(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n            var startTime = msToSec(entry.startTime);\n            IS_DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n            _this._measurements['fid'] = { value: metric.value };\n            _this._measurements['mark.fid'] = { value: timeOrigin + startTime };\n        });\n    };\n    return MetricsInstrumentation;\n}());\nexport { MetricsInstrumentation };\n/** Instrument navigation entries */\nfunction addNavigationSpans(transaction, entry, timeOrigin) {\n    ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(function (event) {\n        addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n    });\n    addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n    addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n    addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n    addRequest(transaction, entry, timeOrigin);\n}\n/** Create measure related spans */\nfunction addMeasureSpans(transaction, entry, startTime, duration, timeOrigin) {\n    var measureStartTimestamp = timeOrigin + startTime;\n    var measureEndTimestamp = measureStartTimestamp + duration;\n    _startChild(transaction, {\n        description: entry.name,\n        endTimestamp: measureEndTimestamp,\n        op: entry.entryType,\n        startTimestamp: measureStartTimestamp,\n    });\n    return measureStartTimestamp;\n}\n/** Create resource-related spans */\nexport function addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin) {\n    // we already instrument based on fetch and xhr, so we don't need to\n    // duplicate spans here.\n    if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n        return;\n    }\n    var data = {};\n    if ('transferSize' in entry) {\n        data['Transfer Size'] = entry.transferSize;\n    }\n    if ('encodedBodySize' in entry) {\n        data['Encoded Body Size'] = entry.encodedBodySize;\n    }\n    if ('decodedBodySize' in entry) {\n        data['Decoded Body Size'] = entry.decodedBodySize;\n    }\n    var startTimestamp = timeOrigin + startTime;\n    var endTimestamp = startTimestamp + duration;\n    _startChild(transaction, {\n        description: resourceName,\n        endTimestamp: endTimestamp,\n        op: entry.initiatorType ? \"resource.\" + entry.initiatorType : 'resource',\n        startTimestamp: startTimestamp,\n        data: data,\n    });\n}\n/** Create performance navigation related spans */\nfunction addPerformanceNavigationTiming(transaction, entry, event, timeOrigin, description, eventEnd) {\n    var end = eventEnd ? entry[eventEnd] : entry[event + \"End\"];\n    var start = entry[event + \"Start\"];\n    if (!start || !end) {\n        return;\n    }\n    _startChild(transaction, {\n        op: 'browser',\n        description: (description !== null && description !== void 0 ? description : event),\n        startTimestamp: timeOrigin + msToSec(start),\n        endTimestamp: timeOrigin + msToSec(end),\n    });\n}\n/** Create request and response related spans */\nfunction addRequest(transaction, entry, timeOrigin) {\n    _startChild(transaction, {\n        op: 'browser',\n        description: 'request',\n        startTimestamp: timeOrigin + msToSec(entry.requestStart),\n        endTimestamp: timeOrigin + msToSec(entry.responseEnd),\n    });\n    _startChild(transaction, {\n        op: 'browser',\n        description: 'response',\n        startTimestamp: timeOrigin + msToSec(entry.responseStart),\n        endTimestamp: timeOrigin + msToSec(entry.responseEnd),\n    });\n}\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function _startChild(transaction, _a) {\n    var startTimestamp = _a.startTimestamp, ctx = __rest(_a, [\"startTimestamp\"]);\n    if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n        transaction.startTimestamp = startTimestamp;\n    }\n    return transaction.startChild(__assign({ startTimestamp: startTimestamp }, ctx));\n}\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n    return typeof value === 'number' && isFinite(value);\n}\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction tagMetricInfo(transaction, lcpEntry, clsEntry) {\n    if (lcpEntry) {\n        IS_DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n        // Capture Properties of the LCP element that contributes to the LCP.\n        if (lcpEntry.element) {\n            transaction.setTag('lcp.element', htmlTreeAsString(lcpEntry.element));\n        }\n        if (lcpEntry.id) {\n            transaction.setTag('lcp.id', lcpEntry.id);\n        }\n        if (lcpEntry.url) {\n            // Trim URL to the first 200 characters.\n            transaction.setTag('lcp.url', lcpEntry.url.trim().slice(0, 200));\n        }\n        transaction.setTag('lcp.size', lcpEntry.size);\n    }\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n    if (clsEntry && clsEntry.sources) {\n        IS_DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n        clsEntry.sources.forEach(function (source, index) {\n            return transaction.setTag(\"cls.source.\" + (index + 1), htmlTreeAsString(source.node));\n        });\n    }\n}\n//# sourceMappingURL=metrics.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { addInstrumentationHandler, isInstanceOf, isMatchingPattern } from '@sentry/utils';\nimport { getActiveTransaction, hasTracingEnabled } from '../utils';\nexport var DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\nexport var defaultRequestInstrumentationOptions = {\n    traceFetch: true,\n    traceXHR: true,\n    tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var _a = __assign(__assign({}, defaultRequestInstrumentationOptions), _options), traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n    // We should cache url -> decision so that we don't have to compute\n    // regexp everytime we create a request.\n    var urlMap = {};\n    var defaultShouldCreateSpan = function (url) {\n        if (urlMap[url]) {\n            return urlMap[url];\n        }\n        var origins = tracingOrigins;\n        urlMap[url] =\n            origins.some(function (origin) { return isMatchingPattern(url, origin); }) &&\n                !isMatchingPattern(url, 'sentry_key');\n        return urlMap[url];\n    };\n    // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n    // That's why we filter out already unwanted Spans from tracingOrigins\n    var shouldCreateSpan = defaultShouldCreateSpan;\n    if (typeof shouldCreateSpanForRequest === 'function') {\n        shouldCreateSpan = function (url) {\n            return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n        };\n    }\n    var spans = {};\n    if (traceFetch) {\n        addInstrumentationHandler('fetch', function (handlerData) {\n            fetchCallback(handlerData, shouldCreateSpan, spans);\n        });\n    }\n    if (traceXHR) {\n        addInstrumentationHandler('xhr', function (handlerData) {\n            xhrCallback(handlerData, shouldCreateSpan, spans);\n        });\n    }\n}\n/**\n * Create and track fetch request spans\n */\nexport function fetchCallback(handlerData, shouldCreateSpan, spans) {\n    if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n        return;\n    }\n    if (handlerData.endTimestamp) {\n        var spanId = handlerData.fetchData.__span;\n        if (!spanId)\n            return;\n        var span = spans[spanId];\n        if (span) {\n            if (handlerData.response) {\n                // TODO (kmclb) remove this once types PR goes through\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                span.setHttpStatus(handlerData.response.status);\n            }\n            else if (handlerData.error) {\n                span.setStatus('internal_error');\n            }\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[spanId];\n        }\n        return;\n    }\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: __assign(__assign({}, handlerData.fetchData), { type: 'fetch' }),\n            description: handlerData.fetchData.method + \" \" + handlerData.fetchData.url,\n            op: 'http.client',\n        });\n        handlerData.fetchData.__span = span.spanId;\n        spans[span.spanId] = span;\n        var request = (handlerData.args[0] = handlerData.args[0]);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var options = (handlerData.args[1] = handlerData.args[1] || {});\n        var headers = options.headers;\n        if (isInstanceOf(request, Request)) {\n            headers = request.headers;\n        }\n        if (headers) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (typeof headers.append === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                headers.append('sentry-trace', span.toTraceparent());\n            }\n            else if (Array.isArray(headers)) {\n                headers = __spread(headers, [['sentry-trace', span.toTraceparent()]]);\n            }\n            else {\n                headers = __assign(__assign({}, headers), { 'sentry-trace': span.toTraceparent() });\n            }\n        }\n        else {\n            headers = { 'sentry-trace': span.toTraceparent() };\n        }\n        options.headers = headers;\n    }\n}\n/**\n * Create and track xhr request spans\n */\nexport function xhrCallback(handlerData, shouldCreateSpan, spans) {\n    if (!hasTracingEnabled() ||\n        (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n        !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))) {\n        return;\n    }\n    var xhr = handlerData.xhr.__sentry_xhr__;\n    // check first if the request has finished and is tracked by an existing span which should now end\n    if (handlerData.endTimestamp) {\n        var spanId = handlerData.xhr.__sentry_xhr_span_id__;\n        if (!spanId)\n            return;\n        var span = spans[spanId];\n        if (span) {\n            span.setHttpStatus(xhr.status_code);\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[spanId];\n        }\n        return;\n    }\n    // if not, create a new span to track it\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: __assign(__assign({}, xhr.data), { type: 'xhr', method: xhr.method, url: xhr.url }),\n            description: xhr.method + \" \" + xhr.url,\n            op: 'http.client',\n        });\n        handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n        spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n        if (handlerData.xhr.setRequestHeader) {\n            try {\n                handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n            }\n            catch (_) {\n                // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n            }\n        }\n    }\n}\n//# sourceMappingURL=request.js.map","import { addInstrumentationHandler, getGlobalObject, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags';\nvar global = getGlobalObject();\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults(customStartTransaction, startTransactionOnPageLoad, startTransactionOnLocationChange) {\n    if (startTransactionOnPageLoad === void 0) { startTransactionOnPageLoad = true; }\n    if (startTransactionOnLocationChange === void 0) { startTransactionOnLocationChange = true; }\n    if (!global || !global.location) {\n        IS_DEBUG_BUILD && logger.warn('Could not initialize routing instrumentation due to invalid location');\n        return;\n    }\n    var startingUrl = global.location.href;\n    var activeTransaction;\n    if (startTransactionOnPageLoad) {\n        activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'pageload' });\n    }\n    if (startTransactionOnLocationChange) {\n        addInstrumentationHandler('history', function (_a) {\n            var to = _a.to, from = _a.from;\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n                startingUrl = undefined;\n                return;\n            }\n            if (from !== to) {\n                startingUrl = undefined;\n                if (activeTransaction) {\n                    IS_DEBUG_BUILD && logger.log(\"[Tracing] Finishing current transaction with op: \" + activeTransaction.op);\n                    // If there's an open transaction on the scope, we need to finish it before creating an new one.\n                    activeTransaction.finish();\n                }\n                activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'navigation' });\n            }\n        });\n    }\n}\n//# sourceMappingURL=router.js.map","import { __assign } from \"tslib\";\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { startIdleTransaction } from '../hubextensions';\nimport { DEFAULT_IDLE_TIMEOUT } from '../idletransaction';\nimport { extractTraceparentData, secToMs } from '../utils';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { MetricsInstrumentation } from './metrics';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests, } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nexport var DEFAULT_MAX_TRANSACTION_DURATION_SECONDS = 600;\nvar DEFAULT_BROWSER_TRACING_OPTIONS = __assign({ idleTimeout: DEFAULT_IDLE_TIMEOUT, markBackgroundTransactions: true, maxTransactionDuration: DEFAULT_MAX_TRANSACTION_DURATION_SECONDS, routingInstrumentation: instrumentRoutingWithDefaults, startTransactionOnLocationChange: true, startTransactionOnPageLoad: true }, defaultRequestInstrumentationOptions);\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nvar BrowserTracing = /** @class */ (function () {\n    function BrowserTracing(_options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = BrowserTracing.id;\n        /** Store configured idle timeout so that it can be added as a tag to transactions */\n        this._configuredIdleTimeout = undefined;\n        var tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n        // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n        if (_options) {\n            this._configuredIdleTimeout = _options.idleTimeout;\n            if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins) && _options.tracingOrigins.length !== 0) {\n                tracingOrigins = _options.tracingOrigins;\n            }\n            else {\n                IS_DEBUG_BUILD && (this._emitOptionsWarning = true);\n            }\n        }\n        this.options = __assign(__assign(__assign({}, DEFAULT_BROWSER_TRACING_OPTIONS), _options), { tracingOrigins: tracingOrigins });\n        var _metricOptions = this.options._metricOptions;\n        this._metrics = new MetricsInstrumentation(_metricOptions && _metricOptions._reportAllChanges);\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.prototype.setupOnce = function (_, getCurrentHub) {\n        var _this = this;\n        this._getCurrentHub = getCurrentHub;\n        if (this._emitOptionsWarning) {\n            IS_DEBUG_BUILD &&\n                logger.warn('[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.');\n            IS_DEBUG_BUILD &&\n                logger.warn(\"[Tracing] We added a reasonable default for you: \" + defaultRequestInstrumentationOptions.tracingOrigins);\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, instrumentRouting = _a.routingInstrumentation, startTransactionOnLocationChange = _a.startTransactionOnLocationChange, startTransactionOnPageLoad = _a.startTransactionOnPageLoad, markBackgroundTransactions = _a.markBackgroundTransactions, traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n        instrumentRouting(function (context) { return _this._createRouteTransaction(context); }, startTransactionOnPageLoad, startTransactionOnLocationChange);\n        if (markBackgroundTransactions) {\n            registerBackgroundTabDetection();\n        }\n        instrumentOutgoingRequests({ traceFetch: traceFetch, traceXHR: traceXHR, tracingOrigins: tracingOrigins, shouldCreateSpanForRequest: shouldCreateSpanForRequest });\n    };\n    /** Create routing idle transaction. */\n    BrowserTracing.prototype._createRouteTransaction = function (context) {\n        var _this = this;\n        if (!this._getCurrentHub) {\n            IS_DEBUG_BUILD &&\n                logger.warn(\"[Tracing] Did not create \" + context.op + \" transaction because _getCurrentHub is invalid.\");\n            return undefined;\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, beforeNavigate = _a.beforeNavigate, idleTimeout = _a.idleTimeout, maxTransactionDuration = _a.maxTransactionDuration;\n        var parentContextFromHeader = context.op === 'pageload' ? getHeaderContext() : undefined;\n        var expandedContext = __assign(__assign(__assign({}, context), parentContextFromHeader), { trimEnd: true });\n        var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n        // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n        // from being sent to Sentry).\n        var finalContext = modifiedContext === undefined ? __assign(__assign({}, expandedContext), { sampled: false }) : modifiedContext;\n        if (finalContext.sampled === false) {\n            IS_DEBUG_BUILD && logger.log(\"[Tracing] Will not send \" + finalContext.op + \" transaction because of beforeNavigate.\");\n        }\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] Starting \" + finalContext.op + \" transaction on scope\");\n        var hub = this._getCurrentHub();\n        var location = getGlobalObject().location;\n        var idleTransaction = startIdleTransaction(hub, finalContext, idleTimeout, true, { location: location });\n        idleTransaction.registerBeforeFinishCallback(function (transaction, endTimestamp) {\n            _this._metrics.addPerformanceEntries(transaction);\n            adjustTransactionDuration(secToMs(maxTransactionDuration), transaction, endTimestamp);\n        });\n        idleTransaction.setTag('idleTimeout', this._configuredIdleTimeout);\n        return idleTransaction;\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.id = 'BrowserTracing';\n    return BrowserTracing;\n}());\nexport { BrowserTracing };\n/**\n * Gets transaction context from a sentry-trace meta.\n *\n * @returns Transaction context data from the header or undefined if there's no header or the header is malformed\n */\nexport function getHeaderContext() {\n    var header = getMetaContent('sentry-trace');\n    if (header) {\n        return extractTraceparentData(header);\n    }\n    return undefined;\n}\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName) {\n    var el = getGlobalObject().document.querySelector(\"meta[name=\" + metaName + \"]\");\n    return el ? el.getAttribute('content') : null;\n}\n/** Adjusts transaction value based on max transaction duration */\nfunction adjustTransactionDuration(maxDuration, transaction, endTimestamp) {\n    var diff = endTimestamp - transaction.startTimestamp;\n    var isOutdatedTransaction = endTimestamp && (diff > maxDuration || diff < 0);\n    if (isOutdatedTransaction) {\n        transaction.setStatus('deadline_exceeded');\n        transaction.setTag('maxTransactionDurationExceeded', 'true');\n    }\n}\n//# sourceMappingURL=browsertracing.js.map","import { addExtensionMethods } from './hubextensions';\nimport * as Integrations from './integrations';\nexport { Integrations };\n// This is already exported as part of `Integrations` above (and for the moment will remain so for\n// backwards compatibility), but that interferes with treeshaking, so we also export it separately\n// here.\n//\n// Previously we expected users to import tracing integrations like\n//\n// import { Integrations } from '@sentry/tracing';\n// const instance = new Integrations.BrowserTracing();\n//\n// This makes the integrations unable to be treeshaken though. To address this, we now have\n// this individual export. We now expect users to consume BrowserTracing like so:\n//\n// import { BrowserTracing } from '@sentry/tracing';\n// const instance = new BrowserTracing();\n//\n// For an example of of the new usage of BrowserTracing, see @sentry/nextjs index.client.ts\nexport { BrowserTracing } from './browser';\nexport { Span, spanStatusfromHttpCode } from './span';\n// eslint-disable-next-line deprecation/deprecation\nexport { SpanStatus } from './spanstatus';\nexport { Transaction } from './transaction';\nexport { \n// TODO deprecate old name in v7\ninstrumentOutgoingRequests as registerRequestInstrumentation, defaultRequestInstrumentationOptions, } from './browser';\nexport { IdleTransaction } from './idletransaction';\nexport { startIdleTransaction } from './hubextensions';\n// We are patching the global object with our hub extension methods\naddExtensionMethods();\nexport { addExtensionMethods };\nexport { extractTraceparentData, getActiveTransaction, hasTracingEnabled, stripUrlQueryAndFragment, TRACEPARENT_REGEXP, } from './utils';\n//# sourceMappingURL=index.js.map"],"names":["TRACEPARENT_REGEXP","extractTraceparentData","traceparent","matches","parentSampled","IS_DEBUG_BUILD","hasTracingEnabled","maybeOptions","client","getCurrentHub","options","getActiveTransaction","maybeHub","hub","scope","msToSec","time","secToMs","registerErrorInstrumentation","addInstrumentationHandler","errorCallback","activeTransaction","status_1","logger","FINISH_REASON_TAG","IDLE_TRANSACTION_FINISH_REASONS","SpanRecorder","maxlen","span","Span","spanContext","uuid4","timestampWithMs","childSpan","__assign","key","value","_a","httpStatus","spanStatus","spanStatusfromHttpCode","endTimestamp","sampledString","dropUndefinedKeys","_b","_c","_d","_e","Transaction","_super","__extends","transactionContext","_this","isInstanceOf","Hub","name","measurements","newMetadata","transport","finishedSpans","s","prev","current","transaction","hasMeasurements","SpanClass","DEFAULT_IDLE_TIMEOUT","HEARTBEAT_INTERVAL","IdleTransactionSpanRecorder","_pushActivity","_popActivity","transactionSpanId","IdleTransaction","_idleHub","_idleTimeout","_onScope","clearActiveTransaction","e_1","__values","callback","e_1_1","keepSpan","pushActivity","id","popActivity","spanId","timeout","end_1","heartbeatString","traceHeaders","sample","samplingContext","sampleRate","isValidSampleRate","rate","isNaN","_startTransaction","customSamplingContext","startIdleTransaction","idleTimeout","onScope","_addTracingExtensions","carrier","getMainCarrier","_autoloadDatabaseIntegrations","packageToIntegrationMapping","integration","dynamicRequire","mappedPackages","moduleName","loadModule","pkg","e","p","__spread","addExtensionMethods","isNodeEnv","Express","instrumentMiddlewares","wrap","fn","method","arity","req","res","span_1","next","args","_i","err","wrapMiddlewareArgs","arg","a","patchMiddleware","router","originalCallback","methods","Postgres","_","Client","fill","orig","config","values","parentSpan","result","rv","isThenable","Mysql","fields","OPERATIONS","OPERATION_SIGNATURES","Mongo","collection","operations","operation","getSpanContext","lastArg","maybePromise","data","signature","shouldDescribe","__read","map","reduce","i","_oO","global","getGlobalObject","registerBackgroundTabDetection","statusType","bindReporter","metric","reportAllChanges","prevValue","forceReport","generateUniqueID","initMetric","observe","type","po","l","onHidden","cb","once","onHiddenOrPageHide","event","getCLS","onReport","report","sessionValue","sessionEntries","entryHandler","entry","firstSessionEntry","lastSessionEntry","firstHiddenTime","initHiddenTime","trackChanges","timeStamp","getVisibilityWatcher","getFID","visibilityWatcher","reportedMetricIDs","getLCP","stopListening_1","MetricsInstrumentation","_reportAllChanges","browserPerformanceTimeOrigin","timeOrigin","responseStartTimestamp","requestStartTimestamp","startTime","duration","addNavigationSpans","startTimestamp","addMeasureSpans","firstHidden","shouldRecord","resourceName","addResourceSpans","timeOrigin_1","oldValue","measurementTimestamp","normalizedValue","delta","_startChild","tagMetricInfo","navigator","connection","isMeasurementValue","addPerformanceNavigationTiming","addRequest","measureStartTimestamp","measureEndTimestamp","description","eventEnd","end","start","ctx","__rest","lcpEntry","clsEntry","htmlTreeAsString","source","index","DEFAULT_TRACING_ORIGINS","defaultRequestInstrumentationOptions","instrumentOutgoingRequests","_options","traceFetch","traceXHR","tracingOrigins","shouldCreateSpanForRequest","urlMap","defaultShouldCreateSpan","url","origins","origin","isMatchingPattern","shouldCreateSpan","spans","handlerData","fetchCallback","xhrCallback","request","headers","xhr","instrumentRoutingWithDefaults","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","to","from","DEFAULT_MAX_TRANSACTION_DURATION_SECONDS","DEFAULT_BROWSER_TRACING_OPTIONS","BrowserTracing","_metricOptions","instrumentRouting","markBackgroundTransactions","context","beforeNavigate","maxTransactionDuration","parentContextFromHeader","getHeaderContext","expandedContext","modifiedContext","finalContext","location","idleTransaction","adjustTransactionDuration","header","getMetaContent","metaName","el","maxDuration","diff","isOutdatedTransaction"],"mappings":"yNAAO,IAAIA,GAAqB,IAAI,OAAO,2DAI7B,EAQP,SAASC,GAAuBC,EAAa,CAChD,IAAIC,EAAUD,EAAY,MAAMF,EAAkB,EAClD,GAAIG,EAAS,CACT,IAAIC,EAAgB,OACpB,OAAID,EAAQ,CAAC,IAAM,IACfC,EAAgB,GAEXD,EAAQ,CAAC,IAAM,MACpBC,EAAgB,IAEb,CACH,QAASD,EAAQ,CAAC,EAClB,cAAeC,EACf,aAAcD,EAAQ,CAAC,CACnC,CACK,CAEL,CCfO,IAAIE,EAAiB,OAAO,kBAAqB,YAAc,GAAO,iBCKtE,SAASC,EAAkBC,EAAc,CAC5C,IAAIC,EAASC,IAAgB,YACzBC,EAAUH,GAAiBC,GAAUA,EAAO,WAAY,EAC5D,MAAO,CAAC,CAACE,IAAY,qBAAsBA,GAAW,kBAAmBA,EAC7E,CAEO,SAASC,EAAqBC,EAAU,CAC3C,IAAIC,EAAMD,GAAYH,IAClBK,EAAQD,EAAI,WAChB,OAAOC,GAASA,EAAM,gBAC1B,CAKO,SAASC,EAAQC,EAAM,CAC1B,OAAOA,EAAO,GAClB,CAKO,SAASC,GAAQD,EAAM,CAC1B,OAAOA,EAAO,GAClB,CCrCO,SAASE,IAA+B,CAC3CC,EAA0B,QAASC,EAAa,EAChDD,EAA0B,qBAAsBC,EAAa,CACjE,CAIA,SAASA,IAAgB,CACrB,IAAIC,EAAoBV,IACxB,GAAIU,EAAmB,CACnB,IAAIC,EAAW,iBACfjB,GAAkBkB,EAAO,IAAI,0BAA4BD,EAAW,0BAA0B,EAC9FD,EAAkB,UAAUC,CAAQ,CACvC,CACL,CClBO,IAAIE,EAAoB,eACpBC,EAAkC,CAAC,kBAAmB,cAAe,gBAAgB,ECK5FC,GAA8B,UAAY,CAC1C,SAASA,EAAaC,EAAQ,CACtBA,IAAW,SAAUA,EAAS,KAClC,KAAK,MAAQ,GACb,KAAK,QAAUA,CAClB,CAOD,OAAAD,EAAa,UAAU,IAAM,SAAUE,EAAM,CACrC,KAAK,MAAM,OAAS,KAAK,QACzBA,EAAK,aAAe,OAGpB,KAAK,MAAM,KAAKA,CAAI,CAEhC,EACWF,CACX,EAAC,EAKGG,GAAsB,UAAY,CAQlC,SAASA,EAAKC,EAAa,CAsBvB,GAlBA,KAAK,QAAUC,IAIf,KAAK,OAASA,EAAO,EAAC,UAAU,EAAE,EAIlC,KAAK,eAAiBC,IAItB,KAAK,KAAO,GAKZ,KAAK,KAAO,GACR,CAACF,EACD,OAAO,KAEPA,EAAY,UACZ,KAAK,QAAUA,EAAY,SAE3BA,EAAY,SACZ,KAAK,OAASA,EAAY,QAE1BA,EAAY,eACZ,KAAK,aAAeA,EAAY,cAGhC,YAAaA,IACb,KAAK,QAAUA,EAAY,SAE3BA,EAAY,KACZ,KAAK,GAAKA,EAAY,IAEtBA,EAAY,cACZ,KAAK,YAAcA,EAAY,aAE/BA,EAAY,OACZ,KAAK,KAAOA,EAAY,MAExBA,EAAY,OACZ,KAAK,KAAOA,EAAY,MAExBA,EAAY,SACZ,KAAK,OAASA,EAAY,QAE1BA,EAAY,iBACZ,KAAK,eAAiBA,EAAY,gBAElCA,EAAY,eACZ,KAAK,aAAeA,EAAY,aAEvC,CAKD,OAAAD,EAAK,UAAU,MAAQ,SAAUC,EAAa,CAC1C,OAAO,KAAK,WAAWA,CAAW,CAC1C,EAIID,EAAK,UAAU,WAAa,SAAUC,EAAa,CAC/C,IAAIG,EAAY,IAAIJ,EAAKK,EAASA,EAAS,GAAIJ,CAAW,EAAG,CAAE,aAAc,KAAK,OAAQ,QAAS,KAAK,QAAS,QAAS,KAAK,OAAS,CAAA,CAAC,EACzI,OAAAG,EAAU,aAAe,KAAK,aAC1BA,EAAU,cACVA,EAAU,aAAa,IAAIA,CAAS,EAExCA,EAAU,YAAc,KAAK,YACtBA,CACf,EAIIJ,EAAK,UAAU,OAAS,SAAUM,EAAKC,EAAO,CAC1C,IAAIC,EACJ,YAAK,KAAOH,EAASA,EAAS,CAAE,EAAE,KAAK,IAAI,GAAIG,EAAK,CAAA,EAAIA,EAAGF,CAAG,EAAIC,EAAOC,EAAE,EACpE,IACf,EAKIR,EAAK,UAAU,QAAU,SAAUM,EAAKC,EAAO,CAC3C,IAAIC,EACJ,YAAK,KAAOH,EAASA,EAAS,CAAE,EAAE,KAAK,IAAI,GAAIG,EAAK,CAAA,EAAIA,EAAGF,CAAG,EAAIC,EAAOC,EAAE,EACpE,IACf,EAIIR,EAAK,UAAU,UAAY,SAAUO,EAAO,CACxC,YAAK,OAASA,EACP,IACf,EAIIP,EAAK,UAAU,cAAgB,SAAUS,EAAY,CACjD,KAAK,OAAO,mBAAoB,OAAOA,CAAU,CAAC,EAClD,IAAIC,EAAaC,GAAuBF,CAAU,EAClD,OAAIC,IAAe,iBACf,KAAK,UAAUA,CAAU,EAEtB,IACf,EAIIV,EAAK,UAAU,UAAY,UAAY,CACnC,OAAO,KAAK,SAAW,IAC/B,EAIIA,EAAK,UAAU,OAAS,SAAUY,EAAc,CAC5C,KAAK,aAAe,OAAOA,GAAiB,SAAWA,EAAeT,GAC9E,EAIIH,EAAK,UAAU,cAAgB,UAAY,CACvC,IAAIa,EAAgB,GACpB,OAAI,KAAK,UAAY,SACjBA,EAAgB,KAAK,QAAU,KAAO,MAEnC,KAAK,QAAU,IAAM,KAAK,OAASA,CAClD,EAIIb,EAAK,UAAU,UAAY,UAAY,CACnC,OAAOc,EAAkB,CACrB,KAAM,KAAK,KACX,YAAa,KAAK,YAClB,aAAc,KAAK,aACnB,GAAI,KAAK,GACT,aAAc,KAAK,aACnB,QAAS,KAAK,QACd,OAAQ,KAAK,OACb,eAAgB,KAAK,eACrB,OAAQ,KAAK,OACb,KAAM,KAAK,KACX,QAAS,KAAK,OAC1B,CAAS,CACT,EAIId,EAAK,UAAU,kBAAoB,SAAUC,EAAa,CACtD,IAAIO,EAAIO,EAAIC,EAAIC,EAAIC,EACpB,YAAK,MAAQV,EAAKP,EAAY,KAAOO,GAAO,KAAwBA,EAAK,CAAA,GACzE,KAAK,YAAcP,EAAY,YAC/B,KAAK,aAAeA,EAAY,aAChC,KAAK,GAAKA,EAAY,GACtB,KAAK,aAAeA,EAAY,aAChC,KAAK,QAAUA,EAAY,QAC3B,KAAK,QAAUc,EAAKd,EAAY,OAASc,GAAO,KAAwBA,EAAK,KAAK,QAClF,KAAK,gBAAkBC,EAAKf,EAAY,eAAiBe,GAAO,KAAwBA,EAAK,KAAK,gBAClG,KAAK,OAASf,EAAY,OAC1B,KAAK,MAAQgB,EAAKhB,EAAY,KAAOgB,GAAO,KAAwBA,EAAK,CAAA,GACzE,KAAK,SAAWC,EAAKjB,EAAY,QAAUiB,GAAO,KAAwBA,EAAK,KAAK,SAC7E,IACf,EAIIlB,EAAK,UAAU,gBAAkB,UAAY,CACzC,OAAOc,EAAkB,CACrB,KAAM,OAAO,KAAK,KAAK,IAAI,EAAE,OAAS,EAAI,KAAK,KAAO,OACtD,YAAa,KAAK,YAClB,GAAI,KAAK,GACT,eAAgB,KAAK,aACrB,QAAS,KAAK,OACd,OAAQ,KAAK,OACb,KAAM,OAAO,KAAK,KAAK,IAAI,EAAE,OAAS,EAAI,KAAK,KAAO,OACtD,SAAU,KAAK,OAC3B,CAAS,CACT,EAIId,EAAK,UAAU,OAAS,UAAY,CAChC,OAAOc,EAAkB,CACrB,KAAM,OAAO,KAAK,KAAK,IAAI,EAAE,OAAS,EAAI,KAAK,KAAO,OACtD,YAAa,KAAK,YAClB,GAAI,KAAK,GACT,eAAgB,KAAK,aACrB,QAAS,KAAK,OACd,gBAAiB,KAAK,eACtB,OAAQ,KAAK,OACb,KAAM,OAAO,KAAK,KAAK,IAAI,EAAE,OAAS,EAAI,KAAK,KAAO,OACtD,UAAW,KAAK,aAChB,SAAU,KAAK,OAC3B,CAAS,CACT,EACWd,CACX,EAAC,EAQM,SAASW,GAAuBF,EAAY,CAC/C,GAAIA,EAAa,KAAOA,GAAc,IAClC,MAAO,KAEX,GAAIA,GAAc,KAAOA,EAAa,IAClC,OAAQA,EAAU,CACd,IAAK,KACD,MAAO,kBACX,IAAK,KACD,MAAO,oBACX,IAAK,KACD,MAAO,YACX,IAAK,KACD,MAAO,iBACX,IAAK,KACD,MAAO,sBACX,IAAK,KACD,MAAO,qBACX,QACI,MAAO,kBACd,CAEL,GAAIA,GAAc,KAAOA,EAAa,IAClC,OAAQA,EAAU,CACd,IAAK,KACD,MAAO,gBACX,IAAK,KACD,MAAO,cACX,IAAK,KACD,MAAO,oBACX,QACI,MAAO,gBACd,CAEL,MAAO,eACX,CC5RA,IAAIU,GAA6B,SAAUC,EAAQ,CAC/CC,EAAUF,EAAaC,CAAM,EAQ7B,SAASD,EAAYG,EAAoBtC,EAAK,CAC1C,IAAIuC,EAAQH,EAAO,KAAK,KAAME,CAAkB,GAAK,KACrD,OAAAC,EAAM,cAAgB,GAItBA,EAAM,KAAO3C,IACT4C,GAAaxC,EAAKyC,EAAG,IACrBF,EAAM,KAAOvC,GAEjBuC,EAAM,KAAOD,EAAmB,MAAQ,GACxCC,EAAM,SAAWD,EAAmB,UAAY,CAAA,EAChDC,EAAM,SAAWD,EAAmB,QAEpCC,EAAM,YAAcA,EACbA,CACV,CAID,OAAAJ,EAAY,UAAU,QAAU,SAAUO,EAAM,CAC5C,KAAK,KAAOA,CACpB,EAKIP,EAAY,UAAU,iBAAmB,SAAUrB,EAAQ,CACnDA,IAAW,SAAUA,EAAS,KAC7B,KAAK,eACN,KAAK,aAAe,IAAID,GAAaC,CAAM,GAE/C,KAAK,aAAa,IAAI,IAAI,CAClC,EAKIqB,EAAY,UAAU,gBAAkB,SAAUQ,EAAc,CAC5D,KAAK,cAAgBtB,EAAS,CAAE,EAAEsB,CAAY,CACtD,EAKIR,EAAY,UAAU,YAAc,SAAUS,EAAa,CACvD,KAAK,SAAWvB,EAASA,EAAS,CAAE,EAAE,KAAK,QAAQ,EAAGuB,CAAW,CACzE,EAIIT,EAAY,UAAU,OAAS,SAAUP,EAAc,CACnD,IAAIW,EAAQ,KAEZ,GAAI,KAAK,eAAiB,OAS1B,IANK,KAAK,OACN/C,GAAkBkB,EAAO,KAAK,qEAAqE,EACnG,KAAK,KAAO,2BAGhB0B,EAAO,UAAU,OAAO,KAAK,KAAMR,CAAY,EAC3C,KAAK,UAAY,GAAM,CAEvBpC,GAAkBkB,EAAO,IAAI,kFAAkF,EAC/G,IAAIf,EAAS,KAAK,KAAK,UAAS,EAC5BkD,EAAYlD,GAAUA,EAAO,cAAgBA,EAAO,eACpDkD,GAAaA,EAAU,iBACvBA,EAAU,gBAAgB,cAAe,aAAa,EAE1D,MACH,CACD,IAAIC,EAAgB,KAAK,aAAe,KAAK,aAAa,MAAM,OAAO,SAAUC,EAAG,CAAE,OAAOA,IAAMR,GAASQ,EAAE,YAAa,CAAE,EAAI,GAC7H,KAAK,UAAYD,EAAc,OAAS,IACxC,KAAK,aAAeA,EAAc,OAAO,SAAUE,EAAMC,EAAS,CAC9D,OAAID,EAAK,cAAgBC,EAAQ,aACtBD,EAAK,aAAeC,EAAQ,aAAeD,EAAOC,EAEtDD,CACV,CAAA,EAAE,cAEP,IAAIE,EAAc,CACd,SAAU,CACN,MAAO,KAAK,gBAAiB,CAChC,EACD,MAAOJ,EACP,gBAAiB,KAAK,eACtB,KAAM,KAAK,KACX,UAAW,KAAK,aAChB,YAAa,KAAK,KAClB,KAAM,cACN,sBAAuB,KAAK,QACxC,EACYK,EAAkB,OAAO,KAAK,KAAK,aAAa,EAAE,OAAS,EAC/D,OAAIA,IACA3D,GACIkB,EAAO,IAAI,oDAAqD,KAAK,UAAU,KAAK,cAAe,OAAW,CAAC,CAAC,EACpHwC,EAAY,aAAe,KAAK,eAEpC1D,GAAkBkB,EAAO,IAAI,uBAAyB,KAAK,GAAK,iBAAmB,KAAK,KAAO,GAAG,EAC3F,KAAK,KAAK,aAAawC,CAAW,EACjD,EAIIf,EAAY,UAAU,UAAY,UAAY,CAC1C,IAAIlB,EAAcmB,EAAO,UAAU,UAAU,KAAK,IAAI,EACtD,OAAON,EAAkBT,EAASA,EAAS,CAAE,EAAEJ,CAAW,EAAG,CAAE,KAAM,KAAK,KAAM,QAAS,KAAK,QAAQ,CAAE,CAAC,CACjH,EAIIkB,EAAY,UAAU,kBAAoB,SAAUG,EAAoB,CACpE,IAAId,EACJ,OAAAY,EAAO,UAAU,kBAAkB,KAAK,KAAME,CAAkB,EAChE,KAAK,MAAQd,EAAKc,EAAmB,KAAOd,GAAO,KAAwBA,EAAK,IAChF,KAAK,SAAWc,EAAmB,QAC5B,IACf,EACWH,CACX,EAAEiB,EAAS,EClIAC,GAAuB,IACvBC,GAAqB,IAI5BC,GAA6C,SAAUnB,EAAQ,CAC/DC,EAAUkB,EAA6BnB,CAAM,EAC7C,SAASmB,EAA4BC,EAAeC,EAAcC,EAAmB5C,EAAQ,CACrF4C,IAAsB,SAAUA,EAAoB,IACxD,IAAInB,EAAQH,EAAO,KAAK,KAAMtB,CAAM,GAAK,KACzC,OAAAyB,EAAM,cAAgBiB,EACtBjB,EAAM,aAAekB,EACrBlB,EAAM,kBAAoBmB,EACnBnB,CACV,CAID,OAAAgB,EAA4B,UAAU,IAAM,SAAUxC,EAAM,CACxD,IAAIwB,EAAQ,KAGRxB,EAAK,SAAW,KAAK,oBAErBA,EAAK,OAAS,SAAUa,EAAc,CAClCb,EAAK,aAAe,OAAOa,GAAiB,SAAWA,EAAeT,IACtEoB,EAAM,aAAaxB,EAAK,MAAM,CAC9C,EAEgBA,EAAK,eAAiB,QACtB,KAAK,cAAcA,EAAK,MAAM,GAGtCqB,EAAO,UAAU,IAAI,KAAK,KAAMrB,CAAI,CAC5C,EACWwC,CACX,EAAE1C,EAAY,EAOV8C,GAAiC,SAAUvB,EAAQ,CACnDC,EAAUsB,EAAiBvB,CAAM,EACjC,SAASuB,EAAgBrB,EAAoBsB,EAK7CC,EAEAC,EAAU,CACFD,IAAiB,SAAUA,EAAeR,IAC1CS,IAAa,SAAUA,EAAW,IACtC,IAAIvB,EAAQH,EAAO,KAAK,KAAME,EAAoBsB,CAAQ,GAAK,KAC/D,OAAArB,EAAM,SAAWqB,EACjBrB,EAAM,aAAesB,EACrBtB,EAAM,SAAWuB,EAEjBvB,EAAM,WAAa,GAEnBA,EAAM,kBAAoB,EAE1BA,EAAM,UAAY,GAClBA,EAAM,uBAAyB,GAC3BqB,GAAYE,IAEZC,GAAuBH,CAAQ,EAG/BpE,GAAkBkB,EAAO,IAAI,+CAAiD6B,EAAM,MAAM,EAC1FqB,EAAS,eAAe,SAAU3D,EAAO,CAAE,OAAOA,EAAM,QAAQsC,CAAK,CAAE,CAAE,GAE7EA,EAAM,aAAe,WAAW,UAAY,CACnCA,EAAM,WACPA,EAAM,OAAM,CAE5B,EAAWA,EAAM,YAAY,EACdA,CACV,CAED,OAAAoB,EAAgB,UAAU,OAAS,SAAU/B,EAAc,CACvD,IAAIoC,EAAKxC,EACLe,EAAQ,KAIZ,GAHIX,IAAiB,SAAUA,EAAeT,EAAiB,GAC/D,KAAK,UAAY,GACjB,KAAK,WAAa,GACd,KAAK,aAAc,CACnB3B,GACIkB,EAAO,IAAI,sCAAuC,IAAI,KAAKkB,EAAe,GAAI,EAAE,YAAW,EAAI,KAAK,EAAE,EAC1G,GAAI,CACA,QAASG,EAAKkC,GAAS,KAAK,sBAAsB,EAAGjC,EAAKD,EAAG,KAAM,EAAE,CAACC,EAAG,KAAMA,EAAKD,EAAG,OAAQ,CAC3F,IAAImC,EAAWlC,EAAG,MAClBkC,EAAS,KAAMtC,CAAY,CAC9B,CACJ,OACMuC,EAAO,CAAEH,EAAM,CAAE,MAAOG,CAAO,CAAG,QACjC,CACJ,GAAI,CACInC,GAAM,CAACA,EAAG,OAASR,EAAKO,EAAG,SAASP,EAAG,KAAKO,CAAE,CACrD,QACO,CAAE,GAAIiC,EAAK,MAAMA,EAAI,KAAQ,CACxC,CACD,KAAK,aAAa,MAAQ,KAAK,aAAa,MAAM,OAAO,SAAUjD,EAAM,CAErE,GAAIA,EAAK,SAAWwB,EAAM,OACtB,MAAO,GAGNxB,EAAK,eACNA,EAAK,aAAea,EACpBb,EAAK,UAAU,WAAW,EAC1BvB,GACIkB,EAAO,IAAI,0DAA2D,KAAK,UAAUK,EAAM,OAAW,CAAC,CAAC,GAEhH,IAAIqD,EAAWrD,EAAK,eAAiBa,EACrC,OAAKwC,GACD5E,GACIkB,EAAO,IAAI,6EAA8E,KAAK,UAAUK,EAAM,OAAW,CAAC,CAAC,EAE5HqD,CACvB,CAAa,EACD5E,GAAkBkB,EAAO,IAAI,oCAAoC,CACpE,MAEGlB,GAAkBkB,EAAO,IAAI,qCAAqC,EAGtE,OAAI,KAAK,UACLqD,GAAuB,KAAK,QAAQ,EAEjC3B,EAAO,UAAU,OAAO,KAAK,KAAMR,CAAY,CAC9D,EAQI+B,EAAgB,UAAU,6BAA+B,SAAUO,EAAU,CACzE,KAAK,uBAAuB,KAAKA,CAAQ,CACjD,EAIIP,EAAgB,UAAU,iBAAmB,SAAU7C,EAAQ,CAC3D,IAAIyB,EAAQ,KACZ,GAAI,CAAC,KAAK,aAAc,CACpB,IAAI8B,EAAe,SAAUC,EAAI,CACzB/B,EAAM,WAGVA,EAAM,cAAc+B,CAAE,CACtC,EACgBC,EAAc,SAAUD,EAAI,CACxB/B,EAAM,WAGVA,EAAM,aAAa+B,CAAE,CACrC,EACY,KAAK,aAAe,IAAIf,GAA4Bc,EAAcE,EAAa,KAAK,OAAQzD,CAAM,EAElGtB,GAAkBkB,EAAO,IAAI,oBAAoB,EACjD,KAAK,eAAc,CACtB,CACD,KAAK,aAAa,IAAI,IAAI,CAClC,EAKIiD,EAAgB,UAAU,cAAgB,SAAUa,EAAQ,CACpD,KAAK,eACL,aAAa,KAAK,YAAY,EAC9B,KAAK,aAAe,QAExBhF,GAAkBkB,EAAO,IAAI,2BAA6B8D,CAAM,EAChE,KAAK,WAAWA,CAAM,EAAI,GAC1BhF,GAAkBkB,EAAO,IAAI,iCAAkC,OAAO,KAAK,KAAK,UAAU,EAAE,MAAM,CAC1G,EAKIiD,EAAgB,UAAU,aAAe,SAAUa,EAAQ,CACvD,IAAIjC,EAAQ,KAOZ,GANI,KAAK,WAAWiC,CAAM,IACtBhF,GAAkBkB,EAAO,IAAI,yBAA2B8D,CAAM,EAE9D,OAAO,KAAK,WAAWA,CAAM,EAC7BhF,GAAkBkB,EAAO,IAAI,iCAAkC,OAAO,KAAK,KAAK,UAAU,EAAE,MAAM,GAElG,OAAO,KAAK,KAAK,UAAU,EAAE,SAAW,EAAG,CAC3C,IAAI+D,EAAU,KAAK,aAGfC,EAAQvD,IAAoBsD,EAAU,IAC1C,WAAW,UAAY,CACdlC,EAAM,YACPA,EAAM,OAAO5B,EAAmBC,EAAgC,CAAC,CAAC,EAClE2B,EAAM,OAAOmC,CAAK,EAEzB,EAAED,CAAO,CACb,CACT,EAKId,EAAgB,UAAU,MAAQ,UAAY,CAE1C,GAAI,MAAK,UAGT,KAAIgB,EAAkB,OAAO,KAAK,KAAK,UAAU,EAAE,KAAK,EAAE,EACtDA,IAAoB,KAAK,qBACzB,KAAK,mBAAqB,EAG1B,KAAK,kBAAoB,EAE7B,KAAK,qBAAuBA,EACxB,KAAK,mBAAqB,GAC1BnF,GAAkBkB,EAAO,IAAI,uEAAuE,EACpG,KAAK,UAAU,mBAAmB,EAClC,KAAK,OAAOC,EAAmBC,EAAgC,CAAC,CAAC,EACjE,KAAK,OAAM,GAGX,KAAK,eAAc,EAE/B,EAII+C,EAAgB,UAAU,eAAiB,UAAY,CACnD,IAAIpB,EAAQ,KACZ/C,GAAkBkB,EAAO,IAAI,yCAA2C,KAAK,iBAAiB,EAC9F,WAAW,UAAY,CACnB6B,EAAM,MAAK,CACd,EAAEe,EAAkB,CAC7B,EACWK,CACX,EAAExB,EAAW,EAKb,SAAS4B,GAAuB/D,EAAK,CACjC,GAAIA,EAAK,CACL,IAAIC,EAAQD,EAAI,WAChB,GAAIC,EAAO,CACP,IAAIiD,EAAcjD,EAAM,iBACpBiD,GACAjD,EAAM,QAAQ,MAAS,CAE9B,CACJ,CACL,CCjQA,SAAS2E,IAAe,CACpB,IAAI3E,EAAQ,KAAK,WACjB,GAAIA,EAAO,CACP,IAAIc,EAAOd,EAAM,UACjB,GAAIc,EACA,MAAO,CACH,eAAgBA,EAAK,cAAe,CACpD,CAEK,CACD,MAAO,EACX,CAaA,SAAS8D,GAAO3B,EAAarD,EAASiF,EAAiB,CAEnD,GAAI,CAACrF,EAAkBI,CAAO,EAC1B,OAAAqD,EAAY,QAAU,GACfA,EAGX,GAAIA,EAAY,UAAY,OACxB,OAAAA,EAAY,YAAY,CACpB,oBAAqB,CAAE,OAAQ,gBAAkB,CAC7D,CAAS,EACMA,EAIX,IAAI6B,EA6BJ,OA5BI,OAAOlF,EAAQ,eAAkB,YACjCkF,EAAalF,EAAQ,cAAciF,CAAe,EAClD5B,EAAY,YAAY,CACpB,oBAAqB,CACjB,OAAQ,iBAER,KAAM,OAAO6B,CAAU,CAC1B,CACb,CAAS,GAEID,EAAgB,gBAAkB,QACvCC,EAAaD,EAAgB,cAC7B5B,EAAY,YAAY,CACpB,oBAAqB,CAAE,OAAQ,aAAe,CAC1D,CAAS,IAGD6B,EAAalF,EAAQ,iBACrBqD,EAAY,YAAY,CACpB,oBAAqB,CACjB,OAAQ,cAER,KAAM,OAAO6B,CAAU,CAC1B,CACb,CAAS,GAIAC,GAAkBD,CAAU,EAM5BA,GAUL7B,EAAY,QAAU,KAAK,OAAM,EAAK6B,EAEjC7B,EAAY,SAKjB1D,GAAkBkB,EAAO,IAAI,sBAAwBwC,EAAY,GAAK,kBAAoBA,EAAY,IAAI,EACnGA,IALH1D,GACIkB,EAAO,IAAI,oGAAsG,OAAOqE,CAAU,EAAI,GAAG,EACtI7B,KAdP1D,GACIkB,EAAO,IAAI,6CAA+C,OAAOb,EAAQ,eAAkB,WACrF,oCACA,6EAA6E,EACvFqD,EAAY,QAAU,GACfA,IAXP1D,GAAkBkB,EAAO,KAAK,kEAAkE,EAChGwC,EAAY,QAAU,GACfA,EAsBf,CAIA,SAAS8B,GAAkBC,EAAM,CAG7B,OAAIC,GAAMD,CAAI,GAAK,EAAE,OAAOA,GAAS,UAAY,OAAOA,GAAS,YAC7DzF,GACIkB,EAAO,KAAK,0GAA4G,KAAK,UAAUuE,CAAI,EAAI,YAAc,KAAK,UAAU,OAAOA,CAAI,EAAI,GAAG,EAC3L,IAGPA,EAAO,GAAKA,EAAO,GACnBzF,GACIkB,EAAO,KAAK,oFAAsFuE,EAAO,GAAG,EACzG,IAEJ,EACX,CAgBA,SAASE,GAAkB7C,EAAoB8C,EAAuB,CAClE,IAAIzF,EAAS,KAAK,YACdE,EAAWF,GAAUA,EAAO,WAAU,GAAO,CAAA,EAC7CuD,EAAc,IAAIf,GAAYG,EAAoB,IAAI,EAC1D,OAAAY,EAAc2B,GAAO3B,EAAarD,EAASwB,EAAS,CAAE,cAAeiB,EAAmB,cAAe,mBAAoBA,CAAkB,EAAI8C,CAAqB,CAAC,EACnKlC,EAAY,SACZA,EAAY,iBAAiBrD,EAAQ,cAAgBA,EAAQ,aAAa,QAAQ,EAE/EqD,CACX,CAIO,SAASmC,GAAqBrF,EAAKsC,EAAoBgD,EAAaC,EAASH,EAAuB,CACvG,IAAIzF,EAASK,EAAI,YACbH,EAAWF,GAAUA,EAAO,WAAU,GAAO,CAAA,EAC7CuD,EAAc,IAAIS,GAAgBrB,EAAoBtC,EAAKsF,EAAaC,CAAO,EACnF,OAAArC,EAAc2B,GAAO3B,EAAarD,EAASwB,EAAS,CAAE,cAAeiB,EAAmB,cAAe,mBAAoBA,CAAkB,EAAI8C,CAAqB,CAAC,EACnKlC,EAAY,SACZA,EAAY,iBAAiBrD,EAAQ,cAAgBA,EAAQ,aAAa,QAAQ,EAE/EqD,CACX,CAIO,SAASsC,IAAwB,CACpC,IAAIC,EAAUC,KACTD,EAAQ,aAGbA,EAAQ,WAAW,WAAaA,EAAQ,WAAW,YAAc,GAC5DA,EAAQ,WAAW,WAAW,mBAC/BA,EAAQ,WAAW,WAAW,iBAAmBN,IAEhDM,EAAQ,WAAW,WAAW,eAC/BA,EAAQ,WAAW,WAAW,aAAeb,IAErD,CAIA,SAASe,IAAgC,CACrC,IAAIF,EAAUC,KACd,GAAKD,EAAQ,WAGb,KAAIG,EAA8B,CAC9B,QAAS,UAAY,CACjB,IAAIC,EAAcC,EAAe,OAAQ,2BAA2B,EACpE,OAAO,IAAID,EAAY,KAC1B,EACD,SAAU,UAAY,CAClB,IAAIA,EAAcC,EAAe,OAAQ,2BAA2B,EACpE,OAAO,IAAID,EAAY,MAAM,CAAE,SAAU,EAAM,CAAA,CAClD,EACD,MAAO,UAAY,CACf,IAAIA,EAAcC,EAAe,OAAQ,2BAA2B,EACpE,OAAO,IAAID,EAAY,KAC1B,EACD,GAAI,UAAY,CACZ,IAAIA,EAAcC,EAAe,OAAQ,8BAA8B,EACvE,OAAO,IAAID,EAAY,QAC1B,CACT,EACQE,EAAiB,OAAO,KAAKH,CAA2B,EACvD,OAAO,SAAUI,EAAY,CAAE,MAAO,CAAC,CAACC,EAAWD,CAAU,EAAI,EACjE,IAAI,SAAUE,EAAK,CACpB,GAAI,CACA,OAAON,EAA4BM,CAAG,GACzC,OACMC,EAAG,CACN,MACH,CACT,CAAK,EACI,OAAO,SAAUC,EAAG,CAAE,OAAOA,CAAI,CAAA,EAClCL,EAAe,OAAS,IACxBN,EAAQ,WAAW,aAAeY,EAAUZ,EAAQ,WAAW,cAAgB,GAAKM,CAAc,GAE1G,CAIO,SAASO,IAAsB,CAClCd,KAEIe,GAAS,GACTZ,KAGJtF,IACJ,CC5NA,IAAImG,GAAyB,UAAY,CAIrC,SAASA,EAAQ3G,EAAS,CAClBA,IAAY,SAAUA,EAAU,CAAE,GAItC,KAAK,KAAO2G,EAAQ,GACpB,KAAK,QAAU3G,EAAQ,QAAUA,EAAQ,IACzC,KAAK,UAAY,MAAM,QAAQA,EAAQ,OAAO,EAAIA,EAAQ,QAAU,CAAA,GAAI,OAAO,KAAK,CACvF,CAID,OAAA2G,EAAQ,UAAU,UAAY,UAAY,CACtC,GAAI,CAAC,KAAK,QAAS,CACfhH,GAAkBkB,EAAO,MAAM,mDAAmD,EAClF,MACH,CACD+F,GAAsB,KAAK,QAAS,KAAK,QAAQ,CACzD,EAIID,EAAQ,GAAK,UACNA,CACX,EAAC,EAiBD,SAASE,GAAKC,EAAIC,EAAQ,CACtB,IAAIC,EAAQF,EAAG,OACf,OAAQE,EAAK,CACT,IAAK,GACD,OAAO,SAAUC,EAAKC,EAAK,CACvB,IAAI7D,EAAc6D,EAAI,qBACtB,GAAI7D,EAAa,CACb,IAAI8D,EAAS9D,EAAY,WAAW,CAChC,YAAayD,EAAG,KAChB,GAAI,sBAAwBC,CACpD,CAAqB,EACDG,EAAI,KAAK,SAAU,UAAY,CAC3BC,EAAO,OAAM,CACrC,CAAqB,CACJ,CACD,OAAOL,EAAG,KAAK,KAAMG,EAAKC,CAAG,CAC7C,EAEQ,IAAK,GACD,OAAO,SAAUD,EAAKC,EAAKE,EAAM,CAC7B,IAAIzF,EACA0B,EAAc6D,EAAI,qBAClBhG,GAAQS,EAAK0B,KAAiB,MAAQ1B,IAAO,OAAS,OAASA,EAAG,WAAW,CAC7E,YAAamF,EAAG,KAChB,GAAI,sBAAwBC,CAChD,CAAiB,EACDD,EAAG,KAAK,KAAMG,EAAKC,EAAK,UAAY,CAEhC,QADIG,EAAO,CAAA,EACFC,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACpCD,EAAKC,CAAE,EAAI,UAAUA,CAAE,EAE3B,IAAI3F,GACHA,EAAKT,KAAU,MAAQS,IAAO,QAAkBA,EAAG,SACpDyF,EAAK,KAAK,MAAMA,EAAMZ,EAAS,CAAC,IAAI,EAAGa,CAAI,CAAC,CAChE,CAAiB,CACjB,EAEQ,IAAK,GACD,OAAO,SAAUE,EAAKN,EAAKC,EAAKE,EAAM,CAClC,IAAIzF,EACA0B,EAAc6D,EAAI,qBAClBhG,GAAQS,EAAK0B,KAAiB,MAAQ1B,IAAO,OAAS,OAASA,EAAG,WAAW,CAC7E,YAAamF,EAAG,KAChB,GAAI,sBAAwBC,CAChD,CAAiB,EACDD,EAAG,KAAK,KAAMS,EAAKN,EAAKC,EAAK,UAAY,CAErC,QADIG,EAAO,CAAA,EACFC,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACpCD,EAAKC,CAAE,EAAI,UAAUA,CAAE,EAE3B,IAAI3F,GACHA,EAAKT,KAAU,MAAQS,IAAO,QAAkBA,EAAG,SACpDyF,EAAK,KAAK,MAAMA,EAAMZ,EAAS,CAAC,IAAI,EAAGa,CAAI,CAAC,CAChE,CAAiB,CACjB,EAEQ,QACI,MAAM,IAAI,MAAM,gDAAkDL,CAAK,CAE9E,CACL,CAWA,SAASQ,GAAmBH,EAAMN,EAAQ,CACtC,OAAOM,EAAK,IAAI,SAAUI,EAAK,CAC3B,OAAI,OAAOA,GAAQ,WACRZ,GAAKY,EAAKV,CAAM,EAEvB,MAAM,QAAQU,CAAG,EACVA,EAAI,IAAI,SAAUC,EAAG,CACxB,OAAI,OAAOA,GAAM,WACNb,GAAKa,EAAGX,CAAM,EAElBW,CACvB,CAAa,EAEED,CACf,CAAK,CACL,CAIA,SAASE,GAAgBC,EAAQb,EAAQ,CACrC,IAAIc,EAAmBD,EAAOb,CAAM,EACpC,OAAAa,EAAOb,CAAM,EAAI,UAAY,CAEzB,QADIM,EAAO,CAAA,EACFC,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACpCD,EAAKC,CAAE,EAAI,UAAUA,CAAE,EAE3B,OAAOO,EAAiB,KAAK,MAAMA,EAAkBrB,EAAS,CAAC,IAAI,EAAGgB,GAAmBH,EAAMN,CAAM,CAAC,CAAC,CAC/G,EACWa,CACX,CAIA,SAAShB,GAAsBgB,EAAQE,EAAS,CACxCA,IAAY,SAAUA,EAAU,CAAE,GACtCA,EAAQ,QAAQ,SAAUf,EAAQ,CAAE,OAAOY,GAAgBC,EAAQb,CAAM,CAAE,CAAE,CACjF,CC7JA,IAAIgB,GAA0B,UAAY,CACtC,SAASA,EAAS/H,EAAS,CACnBA,IAAY,SAAUA,EAAU,CAAE,GAItC,KAAK,KAAO+H,EAAS,GACrB,KAAK,aAAe,CAAC,CAAC/H,EAAQ,WACjC,CAID,OAAA+H,EAAS,UAAU,UAAY,SAAUC,EAAGjI,EAAe,CACvD,IAAI4B,EACA0E,EAAMD,EAAW,IAAI,EACzB,GAAI,CAACC,EAAK,CACN1G,GAAkBkB,EAAO,MAAM,0DAA0D,EACzF,MACH,CACD,GAAI,KAAK,cAAgB,EAAG,GAAAc,EAAK0E,EAAI,UAAY,MAAQ1E,IAAO,SAAkBA,EAAG,QAAS,CAC1FhC,GAAkBkB,EAAO,MAAM,iEAAiE,EAChG,MACH,CACD,IAAIoH,GAAU,KAAK,aAAe5B,EAAI,OAASA,GAAK,OAQpD6B,EAAKD,EAAO,UAAW,QAAS,SAAUE,EAAM,CAC5C,OAAO,SAAUC,EAAQC,EAAQhE,EAAU,CACvC,IAAI1C,EAAIO,EAAIC,EACR/B,EAAQL,IAAgB,WACxBuI,GAAc3G,EAAKvB,KAAW,MAAQuB,IAAO,OAAS,OAASA,EAAG,QAAO,EACzET,GAAQgB,EAAKoG,KAAgB,MAAQpG,IAAO,OAAS,OAASA,EAAG,WAAW,CAC5E,YAAa,OAAOkG,GAAW,SAAWA,EAASA,EAAO,KAC1D,GAAI,IACxB,CAAiB,EACD,GAAI,OAAO/D,GAAa,WACpB,OAAO8D,EAAK,KAAK,KAAMC,EAAQC,EAAQ,SAAUd,EAAKgB,EAAQ,CAC1D,IAAI5G,GACHA,EAAKT,KAAU,MAAQS,IAAO,QAAkBA,EAAG,SACpD0C,EAASkD,EAAKgB,CAAM,CAC5C,CAAqB,EAEL,GAAI,OAAOF,GAAW,WAClB,OAAOF,EAAK,KAAK,KAAMC,EAAQ,SAAUb,EAAKgB,EAAQ,CAClD,IAAI5G,GACHA,EAAKT,KAAU,MAAQS,IAAO,QAAkBA,EAAG,SACpD0G,EAAOd,EAAKgB,CAAM,CAC1C,CAAqB,EAEL,IAAIC,EAAK,OAAOH,GAAW,YAAcF,EAAK,KAAK,KAAMC,EAAQC,CAAM,EAAIF,EAAK,KAAK,KAAMC,CAAM,EACjG,OAAIK,GAAWD,CAAE,EACNA,EAAG,KAAK,SAAUtB,EAAK,CAC1B,IAAIvF,EACJ,OAACA,EAAKT,KAAU,MAAQS,IAAO,QAAkBA,EAAG,SAC7CuF,CAC/B,CAAqB,IAEJ/E,EAAKjB,KAAU,MAAQiB,IAAO,QAAkBA,EAAG,SAC7CqG,EACvB,CACA,CAAS,CACT,EAIIT,EAAS,GAAK,WACPA,CACX,ICxEIW,GAAuB,UAAY,CACnC,SAASA,GAAQ,CAIb,KAAK,KAAOA,EAAM,EACrB,CAID,OAAAA,EAAM,UAAU,UAAY,SAAUV,EAAGjI,EAAe,CACpD,IAAIsG,EAAMD,EAAW,yBAAyB,EAC9C,GAAI,CAACC,EAAK,CACN1G,GAAkBkB,EAAO,MAAM,0DAA0D,EACzF,MACH,CAKDqH,EAAK7B,EAAK,cAAe,SAAU8B,EAAM,CACrC,OAAO,SAAUnI,EAASqI,EAAQhE,EAAU,CACxC,IAAI1C,EAAIO,EACJ9B,EAAQL,IAAgB,WACxBuI,GAAc3G,EAAKvB,KAAW,MAAQuB,IAAO,OAAS,OAASA,EAAG,QAAO,EACzET,GAAQgB,EAAKoG,KAAgB,MAAQpG,IAAO,OAAS,OAASA,EAAG,WAAW,CAC5E,YAAa,OAAOlC,GAAY,SAAWA,EAAUA,EAAQ,IAC7D,GAAI,IACxB,CAAiB,EACD,OAAI,OAAOqE,GAAa,WACb8D,EAAK,KAAK,KAAMnI,EAASqI,EAAQ,SAAUd,EAAKgB,EAAQI,EAAQ,CACnE,IAAIhH,GACHA,EAAKT,KAAU,MAAQS,IAAO,QAAkBA,EAAG,SACpD0C,EAASkD,EAAKgB,EAAQI,CAAM,CACpD,CAAqB,EAED,OAAON,GAAW,WACXF,EAAK,KAAK,KAAMnI,EAAS,SAAUuH,EAAKgB,EAAQI,EAAQ,CAC3D,IAAIhH,GACHA,EAAKT,KAAU,MAAQS,IAAO,QAAkBA,EAAG,SACpD0G,EAAOd,EAAKgB,EAAQI,CAAM,CAClD,CAAqB,EAEER,EAAK,KAAK,KAAMnI,EAASqI,EAAQhE,CAAQ,CAChE,CACA,CAAS,CACT,EAIIqE,EAAM,GAAK,QACJA,CACX,ICpDIE,GAAa,CACb,YACA,YACA,iBACA,cACA,gBACA,aACA,YACA,WACA,OACA,YACA,cACA,yBACA,OACA,UACA,mBACA,oBACA,mBACA,UACA,cACA,mBACA,0BACA,aACA,YACA,WACA,YACA,UACA,yBACA,SACA,aACA,QACA,aACA,WACJ,EAKIC,GAAuB,CAGvB,UAAW,CAAC,YAAY,EACxB,eAAgB,CAAC,OAAO,EACxB,YAAa,CAAC,aAAa,EAC3B,cAAe,CAAC,YAAY,EAC5B,WAAY,CAAC,QAAQ,EACrB,UAAW,CAAC,QAAQ,EACpB,SAAU,CAAC,MAAO,OAAO,EACzB,UAAW,CAAC,WAAW,EACvB,KAAM,CAAC,OAAO,EACd,QAAS,CAAC,OAAO,EACjB,iBAAkB,CAAC,QAAQ,EAC3B,kBAAmB,CAAC,SAAU,aAAa,EAC3C,iBAAkB,CAAC,SAAU,QAAQ,EACrC,YAAa,CAAC,SAAS,EACvB,WAAY,CAAC,MAAM,EACnB,UAAW,CAAC,KAAK,EACjB,UAAW,CAAC,MAAO,QAAQ,EAC3B,OAAQ,CAAC,SAAS,EAClB,WAAY,CAAC,SAAU,KAAK,EAC5B,WAAY,CAAC,SAAU,QAAQ,EAC/B,UAAW,CAAC,SAAU,QAAQ,CAClC,EAEIC,GAAuB,UAAY,CAInC,SAASA,EAAM9I,EAAS,CAChBA,IAAY,SAAUA,EAAU,CAAE,GAItC,KAAK,KAAO8I,EAAM,GAClB,KAAK,YAAc,MAAM,QAAQ9I,EAAQ,UAAU,EAAIA,EAAQ,WAAa4I,GAC5E,KAAK,oBAAsB,uBAAwB5I,EAAUA,EAAQ,mBAAqB,GAC1F,KAAK,aAAe,CAAC,CAACA,EAAQ,WACjC,CAID,OAAA8I,EAAM,UAAU,UAAY,SAAUd,EAAGjI,EAAe,CACpD,IAAIoG,EAAa,KAAK,aAAe,WAAa,UAC9CE,EAAMD,EAAWD,CAAU,EAC/B,GAAI,CAACE,EAAK,CACN1G,GAAkBkB,EAAO,MAAM,4CAA8CsF,EAAa,YAAY,EACtG,MACH,CACD,KAAK,sBAAsBE,EAAI,WAAY,KAAK,YAAatG,CAAa,CAClF,EAII+I,EAAM,UAAU,sBAAwB,SAAUC,EAAYC,EAAYjJ,EAAe,CACrF,IAAI2C,EAAQ,KACZsG,EAAW,QAAQ,SAAUC,EAAW,CAAE,OAAOvG,EAAM,gBAAgBqG,EAAYE,EAAWlJ,CAAa,CAAI,CAAA,CACvH,EAII+I,EAAM,UAAU,gBAAkB,SAAUC,EAAYE,EAAWlJ,EAAe,CAC9E,GAAMkJ,KAAaF,EAAW,UAE9B,KAAIG,EAAiB,KAAK,sCAAsC,KAAK,IAAI,EACzEhB,EAAKa,EAAW,UAAWE,EAAW,SAAUd,EAAM,CAClD,OAAO,UAAY,CAEf,QADId,EAAO,CAAA,EACFC,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACpCD,EAAKC,CAAE,EAAI,UAAUA,CAAE,EAE3B,IAAI3F,EAAIO,EAAIC,EAAIC,EACZ+G,EAAU9B,EAAKA,EAAK,OAAS,CAAC,EAC9BjH,EAAQL,IAAgB,WACxBuI,GAAc3G,EAAKvB,KAAW,MAAQuB,IAAO,OAAS,OAASA,EAAG,QAAO,EAG7E,GAAI,OAAOwH,GAAY,YAAeF,IAAc,aAAe5B,EAAK,SAAW,EAAI,CACnF,IAAIF,GAAUjF,EAAKoG,KAAgB,MAAQpG,IAAO,OAAS,OAASA,EAAG,WAAWgH,EAAe,KAAMD,EAAW5B,CAAI,CAAC,EACnH+B,EAAejB,EAAK,KAAK,MAAMA,EAAM3B,EAAS,CAAC,IAAI,EAAGa,CAAI,CAAC,EAC/D,OAAIoB,GAAWW,CAAY,EAChBA,EAAa,KAAK,SAAUlC,EAAK,CACpC,IAAIvF,EACJ,OAACA,EAAKwF,KAAY,MAAQxF,IAAO,QAAkBA,EAAG,SAC/CuF,CACnC,CAAyB,IAGA/E,EAAKgF,KAAY,MAAQhF,IAAO,QAAkBA,EAAG,SAC/CiH,EAEd,CACD,IAAIlI,GAAQkB,EAAKkG,KAAgB,MAAQlG,IAAO,OAAS,OAASA,EAAG,WAAW8G,EAAe,KAAMD,EAAW5B,EAAK,MAAM,EAAG,EAAE,CAAC,CAAC,EAClI,OAAOc,EAAK,KAAK,MAAMA,EAAM3B,EAAS,CAAC,IAAI,EAAGa,EAAK,MAAM,EAAG,EAAE,EAAG,CAAC,SAAUE,EAAKgB,EAAQ,CACjF,IAAI5G,GACHA,EAAKT,KAAU,MAAQS,IAAO,QAAkBA,EAAG,SACpDwH,EAAQ5B,EAAKgB,CAAM,CACtB,CAAA,CAAC,CAAC,CACvB,CACA,CAAS,EACT,EAIIO,EAAM,UAAU,sCAAwC,SAAUC,EAAYE,EAAW5B,EAAM,CAC3F,IAAIgC,EAAO,CACP,eAAgBN,EAAW,eAC3B,OAAQA,EAAW,OACnB,UAAWA,EAAW,SAClC,EACY3H,EAAc,CACd,GAAI,KACJ,YAAa6H,EACb,KAAMI,CAClB,EAGYC,EAAYT,GAAqBI,CAAS,EAC1CM,EAAiB,MAAM,QAAQ,KAAK,mBAAmB,EACrD,KAAK,oBAAoB,SAASN,CAAS,EAC3C,KAAK,oBACX,GAAI,CAACK,GAAa,CAACC,EACf,OAAOnI,EAEX,GAAI,CAEA,GAAI6H,IAAc,YAAa,CAC3B,IAAItH,EAAK6H,GAAOnC,EAAM,CAAC,EAAGoC,EAAM9H,EAAG,CAAC,EAAG+H,EAAS/H,EAAG,CAAC,EACpD0H,EAAKC,EAAU,CAAC,CAAC,EAAI,OAAOG,GAAQ,SAAWA,EAAMA,EAAI,MAAQ,cACjEJ,EAAKC,EAAU,CAAC,CAAC,EAAI,OAAOI,GAAW,SAAWA,EAASA,EAAO,MAAQ,aAC7E,KAEG,SAASC,EAAI,EAAGA,EAAIL,EAAU,OAAQK,IAClCN,EAAKC,EAAUK,CAAC,CAAC,EAAI,KAAK,UAAUtC,EAAKsC,CAAC,CAAC,CAGtD,OACMC,EAAK,CAEX,CACD,OAAOxI,CACf,EAII0H,EAAM,GAAK,QACJA,CACX,ICzLIe,EAASC,EAAe,EAKrB,SAASC,IAAiC,CACzCF,GAAUA,EAAO,SACjBA,EAAO,SAAS,iBAAiB,mBAAoB,UAAY,CAC7D,IAAIlJ,EAAoBV,IACxB,GAAI4J,EAAO,SAAS,QAAUlJ,EAAmB,CAC7C,IAAIqJ,EAAa,YACjBrK,GACIkB,EAAO,IAAI,0BAA4BmJ,EAAa,8CAAgDrJ,EAAkB,EAAE,EAGvHA,EAAkB,QACnBA,EAAkB,UAAUqJ,CAAU,EAE1CrJ,EAAkB,OAAO,mBAAoB,iBAAiB,EAC9DA,EAAkB,OAAOG,EAAmBC,EAAgC,CAAC,CAAC,EAC9EJ,EAAkB,OAAM,CAC3B,CACb,CAAS,EAGDhB,GAAkBkB,EAAO,KAAK,oFAAoF,CAE1H,CChBO,IAAIoJ,EAAe,SAAU5F,EAAU6F,EAAQC,EAAkB,CACpE,IAAIC,EACJ,OAAO,SAAUC,EAAa,CACtBH,EAAO,OAAS,IACZG,GAAeF,KACfD,EAAO,MAAQA,EAAO,OAASE,GAAa,IAKxCF,EAAO,OAASE,IAAc,UAC9BA,EAAYF,EAAO,MACnB7F,EAAS6F,CAAM,GAInC,CACA,ECZWI,GAAmB,UAAY,CACtC,MAAO,MAAQ,KAAK,IAAG,EAAK,KAAO,KAAK,MAAM,KAAK,OAAQ,GAAI,KAAO,EAAE,EAAI,KAChF,ECNWC,EAAa,SAAU1H,EAAMnB,EAAO,CAC3C,MAAO,CACH,KAAMmB,EACN,MAAQnB,GAAU,KAA2BA,EAAQ,GACrD,MAAO,EACP,QAAS,CAAE,EACX,GAAI4I,GAAkB,CAC9B,CACA,ECDWE,EAAU,SAAUC,EAAMpG,EAAU,CAC3C,GAAI,CACA,GAAI,oBAAoB,oBAAoB,SAASoG,CAAI,EAAG,CAGxD,GAAIA,IAAS,eAAiB,EAAE,2BAA4B,MACxD,OAEJ,IAAIC,EAAK,IAAI,oBAAoB,SAAUC,EAAG,CAAE,OAAOA,EAAE,WAAY,EAAC,IAAItG,CAAQ,CAAI,CAAA,EACtF,OAAAqG,EAAG,QAAQ,CAAE,KAAMD,EAAM,SAAU,EAAI,CAAE,EAClCC,CACV,CACJ,OACMpE,EAAG,CAET,CAEL,ECxBWsE,EAAW,SAAUC,EAAIC,EAAM,CACtC,IAAIC,EAAqB,SAAUC,EAAO,EAClCA,EAAM,OAAS,YAAclB,EAAe,EAAG,SAAS,kBAAoB,YAC5Ee,EAAGG,CAAK,EACJF,IACA,oBAAoB,mBAAoBC,EAAoB,EAAI,EAChE,oBAAoB,WAAYA,EAAoB,EAAI,GAGxE,EACI,iBAAiB,mBAAoBA,EAAoB,EAAI,EAG7D,iBAAiB,WAAYA,EAAoB,EAAI,CACzD,ECXWE,GAAS,SAAUC,EAAUf,EAAkB,CACtD,IAAID,EAASK,EAAW,MAAO,CAAC,EAC5BY,EACAC,EAAe,EACfC,EAAiB,CAAA,EACjBC,EAAe,SAAUC,EAAO,CAGhC,GAAIA,GAAS,CAACA,EAAM,eAAgB,CAChC,IAAIC,EAAoBH,EAAe,CAAC,EACpCI,EAAmBJ,EAAeA,EAAe,OAAS,CAAC,EAI3DD,GACAC,EAAe,SAAW,GAC1BE,EAAM,UAAYE,EAAiB,UAAY,KAC/CF,EAAM,UAAYC,EAAkB,UAAY,KAChDJ,GAAgBG,EAAM,MACtBF,EAAe,KAAKE,CAAK,IAGzBH,EAAeG,EAAM,MACrBF,EAAiB,CAACE,CAAK,GAIvBH,EAAelB,EAAO,QACtBA,EAAO,MAAQkB,EACflB,EAAO,QAAUmB,EACbF,GACAA,IAGX,CACT,EACQT,EAAKF,EAAQ,eAAgBc,CAAY,EACzCZ,IACAS,EAASlB,EAAaiB,EAAUhB,EAAQC,CAAgB,EACxDS,EAAS,UAAY,CACjBF,EAAG,YAAW,EAAG,IAAIY,CAAY,EACjCH,EAAO,EAAI,CACvB,CAAS,EAET,EC9CIO,EAAkB,GAClBC,GAAiB,UAAY,CAC7B,OAAO7B,EAAiB,EAAC,SAAS,kBAAoB,SAAW,EAAI,GACzE,EACI8B,GAAe,UAAY,CAE3BhB,EAAS,SAAUjJ,EAAI,CACnB,IAAIkK,EAAYlK,EAAG,UACnB+J,EAAkBG,CACrB,EAAE,EAAI,CACX,EACWC,EAAuB,UAAY,CAC1C,OAAIJ,EAAkB,IAKlBA,EAAkBC,GAAc,EAChCC,MAEG,CACH,IAAI,iBAAkB,CAClB,OAAOF,CACV,CACT,CACA,ECtBWK,GAAS,SAAUb,EAAUf,EAAkB,CACtD,IAAI6B,EAAoBF,IACpB5B,EAASK,EAAW,KAAK,EACzBY,EACAG,EAAe,SAAUC,EAAO,CAE5BJ,GAAUI,EAAM,UAAYS,EAAkB,kBAC9C9B,EAAO,MAAQqB,EAAM,gBAAkBA,EAAM,UAC7CrB,EAAO,QAAQ,KAAKqB,CAAK,EACzBJ,EAAO,EAAI,EAEvB,EACQT,EAAKF,EAAQ,cAAec,CAAY,EACxCZ,IACAS,EAASlB,EAAaiB,EAAUhB,EAAQC,CAAgB,EACxDS,EAAS,UAAY,CACjBF,EAAG,YAAW,EAAG,IAAIY,CAAY,EACjCZ,EAAG,WAAU,CAChB,EAAE,EAAI,EAEf,ECpBIuB,GAAoB,CAAA,EACbC,GAAS,SAAUhB,EAAUf,EAAkB,CACtD,IAAI6B,EAAoBF,IACpB5B,EAASK,EAAW,KAAK,EACzBY,EACAG,EAAe,SAAUC,EAAO,CAGhC,IAAI7J,EAAQ6J,EAAM,UAGd7J,EAAQsK,EAAkB,kBAC1B9B,EAAO,MAAQxI,EACfwI,EAAO,QAAQ,KAAKqB,CAAK,GAEzBJ,GACAA,GAEZ,EACQT,EAAKF,EAAQ,2BAA4Bc,CAAY,EACzD,GAAIZ,EAAI,CACJS,EAASlB,EAAaiB,EAAUhB,EAAQC,CAAgB,EACxD,IAAIgC,EAAkB,UAAY,CACzBF,GAAkB/B,EAAO,EAAE,IAC5BQ,EAAG,YAAW,EAAG,IAAIY,CAAY,EACjCZ,EAAG,WAAU,EACbuB,GAAkB/B,EAAO,EAAE,EAAI,GAC/BiB,EAAO,EAAI,EAE3B,EAIQ,CAAC,UAAW,OAAO,EAAE,QAAQ,SAAUV,EAAM,CACzC,iBAAiBA,EAAM0B,EAAiB,CAAE,KAAM,GAAM,QAAS,EAAI,CAAE,CACjF,CAAS,EACDvB,EAASuB,EAAiB,EAAI,CACjC,CACL,EClDItC,EAASC,EAAe,EAExBsC,GAAwC,UAAY,CACpD,SAASA,EAAuBC,EAAmB,CAC3CA,IAAsB,SAAUA,EAAoB,IACxD,KAAK,kBAAoBA,EACzB,KAAK,cAAgB,GACrB,KAAK,mBAAqB,EACtB,CAAC3F,GAAS,GAAMmD,GAAUA,EAAO,aAAeA,EAAO,WACnDA,EAAO,YAAY,MACnBA,EAAO,YAAY,KAAK,qBAAqB,EAEjD,KAAK,UAAS,EACd,KAAK,UAAS,EACd,KAAK,UAAS,EAErB,CAED,OAAAuC,EAAuB,UAAU,sBAAwB,SAAU/I,EAAa,CAC5E,IAAIX,EAAQ,KACZ,GAAI,GAACmH,GAAU,CAACA,EAAO,aAAe,CAACA,EAAO,YAAY,YAAc,CAACyC,GAIzE,CAAA3M,GAAkBkB,EAAO,IAAI,0DAA0D,EACvF,IAAI0L,EAAalM,EAAQiM,CAA4B,EACjDE,EACAC,EAiDJ,GAhDA5C,EAAO,YACF,WAAY,EACZ,MAAM,KAAK,kBAAkB,EAC7B,QAAQ,SAAU0B,EAAO,CAC1B,IAAImB,EAAYrM,EAAQkL,EAAM,SAAS,EACnCoB,EAAWtM,EAAQkL,EAAM,QAAQ,EACrC,GAAI,EAAAlI,EAAY,KAAO,cAAgBkJ,EAAaG,EAAYrJ,EAAY,gBAG5E,OAAQkI,EAAM,UAAS,CACnB,IAAK,aAAc,CACfqB,GAAmBvJ,EAAakI,EAAOgB,CAAU,EACjDC,EAAyBD,EAAalM,EAAQkL,EAAM,aAAa,EACjEkB,EAAwBF,EAAalM,EAAQkL,EAAM,YAAY,EAC/D,KACH,CACD,IAAK,OACL,IAAK,QACL,IAAK,UAAW,CACZ,IAAIsB,EAAiBC,GAAgBzJ,EAAakI,EAAOmB,EAAWC,EAAUJ,CAAU,EAEpFQ,EAAcjB,IAEdkB,EAAezB,EAAM,UAAYwB,EAAY,gBAC7CxB,EAAM,OAAS,eAAiByB,IAChCrN,GAAkBkB,EAAO,IAAI,0BAA0B,EACvD6B,EAAM,cAAc,GAAQ,CAAE,MAAO6I,EAAM,WAC3C7I,EAAM,cAAc,SAAS,EAAI,CAAE,MAAOmK,CAAc,GAExDtB,EAAM,OAAS,0BAA4ByB,IAC3CrN,GAAkBkB,EAAO,IAAI,2BAA2B,EACxD6B,EAAM,cAAc,IAAS,CAAE,MAAO6I,EAAM,WAC5C7I,EAAM,cAAc,UAAU,EAAI,CAAE,MAAOmK,CAAc,GAE7D,KACH,CACD,IAAK,WAAY,CACb,IAAII,EAAe1B,EAAM,KAAK,QAAQ1B,EAAO,SAAS,OAAQ,EAAE,EAChEqD,GAAiB7J,EAAakI,EAAO0B,EAAcP,EAAWC,EAAUJ,CAAU,EAClF,KACH,CAGJ,CACb,CAAS,EACD,KAAK,mBAAqB,KAAK,IAAI,YAAY,WAAU,EAAG,OAAS,EAAG,CAAC,EACzE,KAAK,gBAAgBlJ,CAAW,EAE5BA,EAAY,KAAO,WAAY,CAE/B,IAAI8J,EAAe9M,EAAQiM,CAA4B,EAGnD,OAAOE,GAA2B,WAClC7M,GAAkBkB,EAAO,IAAI,4BAA4B,EACzD,KAAK,cAAc,KAAU,CAAE,OAAQ2L,EAAyBnJ,EAAY,gBAAkB,KAC1F,OAAOoJ,GAA0B,UAAYA,GAAyBD,IAGtE,KAAK,cAAc,kBAAkB,EAAI,CAAE,OAAQA,EAAyBC,GAAyB,OAG7G,CAAC,MAAO,KAAM,KAAK,EAAE,QAAQ,SAAU5J,EAAM,CACzC,GAAI,GAACH,EAAM,cAAcG,CAAI,GAAKsK,GAAgB9J,EAAY,gBAM9D,KAAI+J,EAAW1K,EAAM,cAAcG,CAAI,EAAE,MACrCwK,EAAuBF,EAAe9M,EAAQ+M,CAAQ,EAEtDE,EAAkB,KAAK,KAAKD,EAAuBhK,EAAY,gBAAkB,GAAI,EACrFkK,EAAQD,EAAkBF,EAC9BzN,GACIkB,EAAO,IAAI,6BAA+BgC,EAAO,SAAWuK,EAAW,OAASE,EAAkB,KAAOC,EAAQ,GAAG,EACxH7K,EAAM,cAAcG,CAAI,EAAE,MAAQyK,EAClD,CAAa,EACG,KAAK,cAAc,UAAU,GAAK,KAAK,cAAc,KAErDE,EAAYnK,EAAa,CACrB,YAAa,oBACb,aAAc,KAAK,cAAc,UAAU,EAAE,MAAQhD,EAAQ,KAAK,cAAc,IAAO,KAAK,EAC5F,GAAI,aACJ,eAAgB,KAAK,cAAc,UAAU,EAAE,KACnE,CAAiB,EAIC,QAAS,KAAK,eAChB,OAAO,KAAK,cAAc,IAE9BgD,EAAY,gBAAgB,KAAK,aAAa,EAC9CoK,GAAcpK,EAAa,KAAK,UAAW,KAAK,SAAS,EACzDA,EAAY,OAAO,0BAA2B,KAAK,iBAAiB,CACvE,EACT,EAII+I,EAAuB,UAAU,gBAAkB,SAAU/I,EAAa,CACtE,IAAIqK,EAAY7D,EAAO,UACvB,GAAK6D,EAIL,KAAIC,EAAaD,EAAU,WACvBC,IACIA,EAAW,eACXtK,EAAY,OAAO,0BAA2BsK,EAAW,aAAa,EAEtEA,EAAW,MACXtK,EAAY,OAAO,iBAAkBsK,EAAW,IAAI,EAEpDC,EAAmBD,EAAW,GAAG,IACjC,KAAK,cAAc,gBAAgB,EAAI,CAAE,MAAOA,EAAW,MAE3DC,EAAmBD,EAAW,QAAQ,IACtC,KAAK,cAAc,qBAAqB,EAAI,CAAE,MAAOA,EAAW,YAGpEC,EAAmBF,EAAU,YAAY,GACzCrK,EAAY,OAAO,eAAgB,OAAOqK,EAAU,YAAY,CAAC,EAEjEE,EAAmBF,EAAU,mBAAmB,GAChDrK,EAAY,OAAO,sBAAuB,OAAOqK,EAAU,mBAAmB,CAAC,EAE3F,EAEItB,EAAuB,UAAU,UAAY,UAAY,CACrD,IAAI1J,EAAQ,KAIZuI,GAAO,SAAUf,EAAQ,CACrB,IAAIqB,EAAQrB,EAAO,QAAQ,IAAG,EACzBqB,IAGL5L,GAAkBkB,EAAO,IAAI,2BAA2B,EACxD6B,EAAM,cAAc,IAAS,CAAE,MAAOwH,EAAO,OAC7CxH,EAAM,UAAY6I,EAC9B,CAAS,CACT,EAEIa,EAAuB,UAAU,UAAY,UAAY,CACrD,IAAI1J,EAAQ,KACZwJ,GAAO,SAAUhC,EAAQ,CACrB,IAAIqB,EAAQrB,EAAO,QAAQ,IAAG,EAC9B,GAAKqB,EAGL,KAAIgB,EAAalM,EAAQiM,CAA4B,EACjDI,EAAYrM,EAAQkL,EAAM,SAAS,EACvC5L,GAAkBkB,EAAO,IAAI,2BAA2B,EACxD6B,EAAM,cAAc,IAAS,CAAE,MAAOwH,EAAO,OAC7CxH,EAAM,cAAc,UAAU,EAAI,CAAE,MAAO6J,EAAaG,GACxDhK,EAAM,UAAY6I,EAC9B,EAAW,KAAK,iBAAiB,CACjC,EAEIa,EAAuB,UAAU,UAAY,UAAY,CACrD,IAAI1J,EAAQ,KACZqJ,GAAO,SAAU7B,EAAQ,CACrB,IAAIqB,EAAQrB,EAAO,QAAQ,IAAG,EAC9B,GAAKqB,EAGL,KAAIgB,EAAalM,EAAQiM,CAA4B,EACjDI,EAAYrM,EAAQkL,EAAM,SAAS,EACvC5L,GAAkBkB,EAAO,IAAI,2BAA2B,EACxD6B,EAAM,cAAc,IAAS,CAAE,MAAOwH,EAAO,OAC7CxH,EAAM,cAAc,UAAU,EAAI,CAAE,MAAO6J,EAAaG,GACpE,CAAS,CACT,EACWN,CACX,EAAC,EAGD,SAASQ,GAAmBvJ,EAAakI,EAAOgB,EAAY,CACxD,CAAC,cAAe,WAAY,wBAAyB,YAAa,SAAS,EAAE,QAAQ,SAAUvB,EAAO,CAClG6C,EAA+BxK,EAAakI,EAAOP,EAAOuB,CAAU,CAC5E,CAAK,EACDsB,EAA+BxK,EAAakI,EAAO,mBAAoBgB,EAAY,UAAW,YAAY,EAC1GsB,EAA+BxK,EAAakI,EAAO,QAASgB,EAAY,QAAS,mBAAmB,EACpGsB,EAA+BxK,EAAakI,EAAO,eAAgBgB,EAAY,KAAK,EACpFuB,GAAWzK,EAAakI,EAAOgB,CAAU,CAC7C,CAEA,SAASO,GAAgBzJ,EAAakI,EAAOmB,EAAWC,EAAUJ,EAAY,CAC1E,IAAIwB,EAAwBxB,EAAaG,EACrCsB,EAAsBD,EAAwBpB,EAClD,OAAAa,EAAYnK,EAAa,CACrB,YAAakI,EAAM,KACnB,aAAcyC,EACd,GAAIzC,EAAM,UACV,eAAgBwC,CACxB,CAAK,EACMA,CACX,CAEO,SAASb,GAAiB7J,EAAakI,EAAO0B,EAAcP,EAAWC,EAAUJ,EAAY,CAGhG,GAAI,EAAAhB,EAAM,gBAAkB,kBAAoBA,EAAM,gBAAkB,SAGxE,KAAIlC,EAAO,CAAA,EACP,iBAAkBkC,IAClBlC,EAAK,eAAe,EAAIkC,EAAM,cAE9B,oBAAqBA,IACrBlC,EAAK,mBAAmB,EAAIkC,EAAM,iBAElC,oBAAqBA,IACrBlC,EAAK,mBAAmB,EAAIkC,EAAM,iBAEtC,IAAIsB,EAAiBN,EAAaG,EAC9B3K,EAAe8K,EAAiBF,EACpCa,EAAYnK,EAAa,CACrB,YAAa4J,EACb,aAAclL,EACd,GAAIwJ,EAAM,cAAgB,YAAcA,EAAM,cAAgB,WAC9D,eAAgBsB,EAChB,KAAMxD,CACd,CAAK,EACL,CAEA,SAASwE,EAA+BxK,EAAakI,EAAOP,EAAOuB,EAAY0B,EAAaC,EAAU,CAClG,IAAIC,EAAMD,EAAW3C,EAAM2C,CAAQ,EAAI3C,EAAMP,EAAQ,KAAK,EACtDoD,EAAQ7C,EAAMP,EAAQ,OAAO,EAC7B,CAACoD,GAAS,CAACD,GAGfX,EAAYnK,EAAa,CACrB,GAAI,UACJ,YAAc4K,GAAgB,KAAiCA,EAAcjD,EAC7E,eAAgBuB,EAAalM,EAAQ+N,CAAK,EAC1C,aAAc7B,EAAalM,EAAQ8N,CAAG,CAC9C,CAAK,CACL,CAEA,SAASL,GAAWzK,EAAakI,EAAOgB,EAAY,CAChDiB,EAAYnK,EAAa,CACrB,GAAI,UACJ,YAAa,UACb,eAAgBkJ,EAAalM,EAAQkL,EAAM,YAAY,EACvD,aAAcgB,EAAalM,EAAQkL,EAAM,WAAW,CAC5D,CAAK,EACDiC,EAAYnK,EAAa,CACrB,GAAI,UACJ,YAAa,WACb,eAAgBkJ,EAAalM,EAAQkL,EAAM,aAAa,EACxD,aAAcgB,EAAalM,EAAQkL,EAAM,WAAW,CAC5D,CAAK,CACL,CAMO,SAASiC,EAAYnK,EAAa1B,EAAI,CACzC,IAAIkL,EAAiBlL,EAAG,eAAgB0M,EAAMC,GAAO3M,EAAI,CAAC,gBAAgB,CAAC,EAC3E,OAAIkL,GAAkBxJ,EAAY,eAAiBwJ,IAC/CxJ,EAAY,eAAiBwJ,GAE1BxJ,EAAY,WAAW7B,EAAS,CAAE,eAAgBqL,CAAgB,EAAEwB,CAAG,CAAC,CACnF,CAIA,SAAST,EAAmBlM,EAAO,CAC/B,OAAO,OAAOA,GAAU,UAAY,SAASA,CAAK,CACtD,CAEA,SAAS+L,GAAcpK,EAAakL,EAAUC,EAAU,CAChDD,IACA5O,GAAkBkB,EAAO,IAAI,gCAAgC,EAEzD0N,EAAS,SACTlL,EAAY,OAAO,cAAeoL,GAAiBF,EAAS,OAAO,CAAC,EAEpEA,EAAS,IACTlL,EAAY,OAAO,SAAUkL,EAAS,EAAE,EAExCA,EAAS,KAETlL,EAAY,OAAO,UAAWkL,EAAS,IAAI,KAAM,EAAC,MAAM,EAAG,GAAG,CAAC,EAEnElL,EAAY,OAAO,WAAYkL,EAAS,IAAI,GAG5CC,GAAYA,EAAS,UACrB7O,GAAkBkB,EAAO,IAAI,gCAAgC,EAC7D2N,EAAS,QAAQ,QAAQ,SAAUE,EAAQC,EAAO,CAC9C,OAAOtL,EAAY,OAAO,eAAiBsL,EAAQ,GAAIF,GAAiBC,EAAO,IAAI,CAAC,CAChG,CAAS,EAET,CC3UO,IAAIE,GAA0B,CAAC,YAAa,KAAK,EAC7CC,EAAuC,CAC9C,WAAY,GACZ,SAAU,GACV,eAAgBD,EACpB,EAEO,SAASE,GAA2BC,EAAU,CAEjD,IAAIpN,EAAKH,EAASA,EAAS,CAAA,EAAIqN,CAAoC,EAAGE,CAAQ,EAAGC,EAAarN,EAAG,WAAYsN,EAAWtN,EAAG,SAAUuN,EAAiBvN,EAAG,eAAgBwN,EAA6BxN,EAAG,2BAGrMyN,EAAS,CAAA,EACTC,EAA0B,SAAUC,EAAK,CACzC,GAAIF,EAAOE,CAAG,EACV,OAAOF,EAAOE,CAAG,EAErB,IAAIC,EAAUL,EACd,OAAAE,EAAOE,CAAG,EACNC,EAAQ,KAAK,SAAUC,EAAQ,CAAE,OAAOC,GAAkBH,EAAKE,CAAM,EAAI,GACrE,CAACC,GAAkBH,EAAK,YAAY,EACrCF,EAAOE,CAAG,CACzB,EAGQI,EAAmBL,EACnB,OAAOF,GAA+B,aACtCO,EAAmB,SAAUJ,EAAK,CAC9B,OAAOD,EAAwBC,CAAG,GAAKH,EAA2BG,CAAG,CACjF,GAEI,IAAIK,EAAQ,CAAA,EACRX,GACAvO,EAA0B,QAAS,SAAUmP,EAAa,CACtDC,GAAcD,EAAaF,EAAkBC,CAAK,CAC9D,CAAS,EAEDV,GACAxO,EAA0B,MAAO,SAAUmP,EAAa,CACpDE,GAAYF,EAAaF,EAAkBC,CAAK,CAC5D,CAAS,CAET,CAIO,SAASE,GAAcD,EAAaF,EAAkBC,EAAO,CAChE,GAAI,GAAC/P,KAAuB,EAAEgQ,EAAY,WAAaF,EAAiBE,EAAY,UAAU,GAAG,IAGjG,IAAIA,EAAY,aAAc,CAC1B,IAAIjL,EAASiL,EAAY,UAAU,OACnC,GAAI,CAACjL,EACD,OACJ,IAAIzD,EAAOyO,EAAMhL,CAAM,EACnBzD,IACI0O,EAAY,SAGZ1O,EAAK,cAAc0O,EAAY,SAAS,MAAM,EAEzCA,EAAY,OACjB1O,EAAK,UAAU,gBAAgB,EAEnCA,EAAK,OAAM,EAEX,OAAOyO,EAAMhL,CAAM,GAEvB,MACH,CACD,IAAIhE,EAAoBV,IACxB,GAAIU,EAAmB,CACnB,IAAIO,EAAOP,EAAkB,WAAW,CACpC,KAAMa,EAASA,EAAS,GAAIoO,EAAY,SAAS,EAAG,CAAE,KAAM,QAAS,EACrE,YAAaA,EAAY,UAAU,OAAS,IAAMA,EAAY,UAAU,IACxE,GAAI,aAChB,CAAS,EACDA,EAAY,UAAU,OAAS1O,EAAK,OACpCyO,EAAMzO,EAAK,MAAM,EAAIA,EACrB,IAAI6O,EAAWH,EAAY,KAAK,CAAC,EAAIA,EAAY,KAAK,CAAC,EAEnD5P,EAAW4P,EAAY,KAAK,CAAC,EAAIA,EAAY,KAAK,CAAC,GAAK,CAAA,EACxDI,EAAUhQ,EAAQ,QAClB2C,GAAaoN,EAAS,OAAO,IAC7BC,EAAUD,EAAQ,SAElBC,EAEI,OAAOA,EAAQ,QAAW,WAE1BA,EAAQ,OAAO,eAAgB9O,EAAK,cAAe,CAAA,EAE9C,MAAM,QAAQ8O,CAAO,EAC1BA,EAAUxJ,EAASwJ,EAAS,CAAC,CAAC,eAAgB9O,EAAK,eAAe,CAAC,CAAC,EAGpE8O,EAAUxO,EAASA,EAAS,CAAA,EAAIwO,CAAO,EAAG,CAAE,eAAgB9O,EAAK,cAAe,CAAA,CAAE,EAItF8O,EAAU,CAAE,eAAgB9O,EAAK,cAAe,CAAA,EAEpDlB,EAAQ,QAAUgQ,CACrB,EACL,CAIO,SAASF,GAAYF,EAAaF,EAAkBC,EAAO,CAC9D,GAAI,GAAC/P,EAAmB,GACnBgQ,EAAY,KAAOA,EAAY,IAAI,wBACpC,EAAEA,EAAY,KAAOA,EAAY,IAAI,gBAAkBF,EAAiBE,EAAY,IAAI,eAAe,GAAG,IAG9G,KAAIK,EAAML,EAAY,IAAI,eAE1B,GAAIA,EAAY,aAAc,CAC1B,IAAIjL,EAASiL,EAAY,IAAI,uBAC7B,GAAI,CAACjL,EACD,OACJ,IAAIzD,EAAOyO,EAAMhL,CAAM,EACnBzD,IACAA,EAAK,cAAc+O,EAAI,WAAW,EAClC/O,EAAK,OAAM,EAEX,OAAOyO,EAAMhL,CAAM,GAEvB,MACH,CAED,IAAIhE,EAAoBV,IACxB,GAAIU,EAAmB,CACnB,IAAIO,EAAOP,EAAkB,WAAW,CACpC,KAAMa,EAASA,EAAS,CAAE,EAAEyO,EAAI,IAAI,EAAG,CAAE,KAAM,MAAO,OAAQA,EAAI,OAAQ,IAAKA,EAAI,IAAK,EACxF,YAAaA,EAAI,OAAS,IAAMA,EAAI,IACpC,GAAI,aAChB,CAAS,EAGD,GAFAL,EAAY,IAAI,uBAAyB1O,EAAK,OAC9CyO,EAAMC,EAAY,IAAI,sBAAsB,EAAI1O,EAC5C0O,EAAY,IAAI,iBAChB,GAAI,CACAA,EAAY,IAAI,iBAAiB,eAAgB1O,EAAK,cAAa,CAAE,CACxE,OACM8G,EAAG,CAET,CAER,EACL,CCrJA,IAAI6B,EAASC,EAAe,EAIrB,SAASoG,GAA8BC,EAAwBC,EAA4BC,EAAkC,CAGhI,GAFID,IAA+B,SAAUA,EAA6B,IACtEC,IAAqC,SAAUA,EAAmC,IAClF,CAACxG,GAAU,CAACA,EAAO,SAAU,CAC7BlK,GAAkBkB,EAAO,KAAK,sEAAsE,EACpG,MACH,CACD,IAAIyP,EAAczG,EAAO,SAAS,KAC9BlJ,EACAyP,IACAzP,EAAoBwP,EAAuB,CAAE,KAAMtG,EAAO,SAAS,SAAU,GAAI,UAAU,CAAE,GAE7FwG,GACA5P,EAA0B,UAAW,SAAUkB,EAAI,CAC/C,IAAI4O,EAAK5O,EAAG,GAAI6O,EAAO7O,EAAG,KAU1B,GAAI6O,IAAS,QAAaF,GAAeA,EAAY,QAAQC,CAAE,IAAM,GAAI,CACrED,EAAc,OACd,MACH,CACGE,IAASD,IACTD,EAAc,OACV3P,IACAhB,GAAkBkB,EAAO,IAAI,oDAAsDF,EAAkB,EAAE,EAEvGA,EAAkB,OAAM,GAE5BA,EAAoBwP,EAAuB,CAAE,KAAMtG,EAAO,SAAS,SAAU,GAAI,YAAY,CAAE,EAE/G,CAAS,CAET,CCnCO,IAAI4G,GAA2C,IAClDC,GAAkClP,EAAS,CAAE,YAAagC,GAAsB,2BAA4B,GAAM,uBAAwBiN,GAA0C,uBAAwBP,GAA+B,iCAAkC,GAAM,2BAA4B,EAAI,EAAIrB,CAAoC,EAQ3V8B,GAAgC,UAAY,CAC5C,SAASA,EAAe5B,EAAU,CAI9B,KAAK,KAAO4B,EAAe,GAE3B,KAAK,uBAAyB,OAC9B,IAAIzB,EAAiBL,EAAqC,eAEtDE,IACA,KAAK,uBAAyBA,EAAS,YACnCA,EAAS,gBAAkB,MAAM,QAAQA,EAAS,cAAc,GAAKA,EAAS,eAAe,SAAW,EACxGG,EAAiBH,EAAS,eAG1BpP,IAAmB,KAAK,oBAAsB,KAGtD,KAAK,QAAU6B,EAASA,EAASA,EAAS,CAAE,EAAEkP,EAA+B,EAAG3B,CAAQ,EAAG,CAAE,eAAgBG,CAAgB,CAAA,EAC7H,IAAI0B,EAAiB,KAAK,QAAQ,eAClC,KAAK,SAAW,IAAIxE,GAAuBwE,GAAkBA,EAAe,iBAAiB,CAChG,CAID,OAAAD,EAAe,UAAU,UAAY,SAAU3I,EAAGjI,EAAe,CAC7D,IAAI2C,EAAQ,KACZ,KAAK,eAAiB3C,EAClB,KAAK,sBACLJ,GACIkB,EAAO,KAAK,0GAA0G,EAC1HlB,GACIkB,EAAO,KAAK,oDAAsDgO,EAAqC,cAAc,GAG7H,IAAIlN,EAAK,KAAK,QAASkP,EAAoBlP,EAAG,uBAAwB0O,EAAmC1O,EAAG,iCAAkCyO,EAA6BzO,EAAG,2BAA4BmP,EAA6BnP,EAAG,2BAA4BqN,EAAarN,EAAG,WAAYsN,EAAWtN,EAAG,SAAUuN,EAAiBvN,EAAG,eAAgBwN,EAA6BxN,EAAG,2BAC9XkP,EAAkB,SAAUE,EAAS,CAAE,OAAOrO,EAAM,wBAAwBqO,CAAO,CAAI,EAAEX,EAA4BC,CAAgC,EACjJS,GACA/G,KAEJ+E,GAA2B,CAAE,WAAYE,EAAY,SAAUC,EAAU,eAAgBC,EAAgB,2BAA4BC,CAA0B,CAAE,CACzK,EAEIwB,EAAe,UAAU,wBAA0B,SAAUI,EAAS,CAClE,IAAIrO,EAAQ,KACZ,GAAI,CAAC,KAAK,eAAgB,CACtB/C,GACIkB,EAAO,KAAK,4BAA8BkQ,EAAQ,GAAK,iDAAiD,EAC5G,MACH,CAED,IAAIpP,EAAK,KAAK,QAASqP,EAAiBrP,EAAG,eAAgB8D,EAAc9D,EAAG,YAAasP,EAAyBtP,EAAG,uBACjHuP,EAA0BH,EAAQ,KAAO,WAAaI,GAAkB,EAAG,OAC3EC,EAAkB5P,EAASA,EAASA,EAAS,CAAE,EAAEuP,CAAO,EAAGG,CAAuB,EAAG,CAAE,QAAS,EAAM,CAAA,EACtGG,EAAkB,OAAOL,GAAmB,WAAaA,EAAeI,CAAe,EAAIA,EAG3FE,EAAeD,IAAoB,OAAY7P,EAASA,EAAS,CAAA,EAAI4P,CAAe,EAAG,CAAE,QAAS,EAAO,CAAA,EAAIC,EAC7GC,EAAa,UAAY,IACzB3R,GAAkBkB,EAAO,IAAI,2BAA6ByQ,EAAa,GAAK,yCAAyC,EAEzH3R,GAAkBkB,EAAO,IAAI,sBAAwByQ,EAAa,GAAK,uBAAuB,EAC9F,IAAInR,EAAM,KAAK,iBACXoR,EAAWzH,EAAiB,EAAC,SAC7B0H,EAAkBhM,GAAqBrF,EAAKmR,EAAc7L,EAAa,GAAM,CAAE,SAAU8L,CAAQ,CAAE,EACvG,OAAAC,EAAgB,6BAA6B,SAAUnO,EAAatB,EAAc,CAC9EW,EAAM,SAAS,sBAAsBW,CAAW,EAChDoO,GAA0BlR,GAAQ0Q,CAAsB,EAAG5N,EAAatB,CAAY,CAChG,CAAS,EACDyP,EAAgB,OAAO,cAAe,KAAK,sBAAsB,EAC1DA,CACf,EAIIb,EAAe,GAAK,iBACbA,CACX,EAAC,EAOM,SAASQ,IAAmB,CAC/B,IAAIO,EAASC,GAAe,cAAc,EAC1C,GAAID,EACA,OAAOnS,GAAuBmS,CAAM,CAG5C,CAEO,SAASC,GAAeC,EAAU,CACrC,IAAIC,EAAK/H,EAAe,EAAG,SAAS,cAAc,aAAe8H,EAAW,GAAG,EAC/E,OAAOC,EAAKA,EAAG,aAAa,SAAS,EAAI,IAC7C,CAEA,SAASJ,GAA0BK,EAAazO,EAAatB,EAAc,CACvE,IAAIgQ,EAAOhQ,EAAesB,EAAY,eAClC2O,EAAwBjQ,IAAiBgQ,EAAOD,GAAeC,EAAO,GACtEC,IACA3O,EAAY,UAAU,mBAAmB,EACzCA,EAAY,OAAO,iCAAkC,MAAM,EAEnE,gKC9FAoD,GAAqB","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]}
{
  "version": 3,
  "sources": ["../../../.yarn/__virtual__/@bangle.dev-pm-commands-virtual-1ac47c2a63/5/Users/ted/.yarn/berry/cache/@bangle.dev-pm-commands-npm-0.32.0-c6939dba60-10c0.zip/node_modules/@bangle.dev/pm-commands/dist/index.js", "../../../.yarn/__virtual__/@bangle.dev-core-virtual-a24b9e11a9/5/Users/ted/.yarn/berry/cache/@bangle.dev-core-npm-0.32.0-e4676daf54-10c0.zip/node_modules/@bangle.dev/core/dist/index.js"],
  "sourcesContent": ["import { Selection, NodeSelection, Slice, Fragment, ReplaceStep, TextSelection } from '@bangle.dev/pm';\nimport { findParentNodeOfType, mapChildren } from '@bangle.dev/utils';\n\nfunction getParentTextSelection(state, currentDepth) {\n    const { $from } = state.selection;\n    const parentPos = $from.start(currentDepth);\n    let replaceStart = parentPos;\n    let replaceEnd = $from.end(currentDepth);\n    return TextSelection.create(state.doc, replaceStart, replaceEnd);\n}\nfunction copyEmptyCommand(type) {\n    return (state, dispatch, view) => {\n        if (!state.selection.empty) {\n            return false;\n        }\n        const current = findParentNodeOfType(type)(state.selection);\n        if (!current) {\n            return false;\n        }\n        const selection = state.selection;\n        let tr = state.tr;\n        tr = tr.setSelection(getParentTextSelection(state, current.depth));\n        if (dispatch) {\n            dispatch(tr);\n        }\n        document.execCommand('copy');\n        // restore the selection\n        const tr2 = view.state.tr;\n        if (dispatch) {\n            dispatch(tr2.setSelection(Selection.near(tr2.doc.resolve(selection.$from.pos))));\n        }\n        return true;\n    };\n}\nfunction cutEmptyCommand(type) {\n    return (state, dispatch) => {\n        if (!state.selection.empty) {\n            return false;\n        }\n        const parent = findParentNodeOfType(type)(state.selection);\n        if (!parent || !parent.node) {\n            return false;\n        }\n        let tr = state.tr;\n        tr = tr.setSelection(NodeSelection.create(tr.doc, parent.pos));\n        if (dispatch) {\n            dispatch(tr);\n        }\n        document.execCommand('cut');\n        return true;\n    };\n}\n// Finds a parent node in the ancestors and check if that node has a direct parent of type `parentsParentType`\nfunction parentHasDirectParentOfType(parentType, parentsParentType) {\n    parentsParentType = Array.isArray(parentsParentType)\n        ? parentsParentType\n        : [parentsParentType];\n    return (state) => {\n        const currentResolved = findParentNodeOfType(parentType)(state.selection);\n        if (!currentResolved) {\n            return false;\n        }\n        const depth = currentResolved.depth - 1;\n        if (depth < 0) {\n            return false;\n        }\n        const parentsParent = state.selection.$from.node(depth);\n        return parentsParentType.includes(parentsParent.type);\n    };\n}\n/**\n * Moves a node up and down. Please do a sanity check if the node is allowed to move or not\n * before calling this command.\n *\n * @param {PMNodeType} type The items type\n * @param {['UP', 'DOWN']} dir\n */\nfunction moveNode(type, dir = 'UP') {\n    const isDown = dir === 'DOWN';\n    return (state, dispatch) => {\n        if (!state.selection.empty) {\n            return false;\n        }\n        const { $from } = state.selection;\n        const currentResolved = findParentNodeOfType(type)(state.selection);\n        if (!currentResolved) {\n            return false;\n        }\n        const { node: currentNode } = currentResolved;\n        const parentDepth = currentResolved.depth - 1;\n        const parent = $from.node(parentDepth);\n        const parentPos = $from.start(parentDepth);\n        if (currentNode.type !== type) {\n            return false;\n        }\n        const arr = mapChildren(parent, (node) => node);\n        let index = arr.indexOf(currentNode);\n        let swapWith = isDown ? index + 1 : index - 1;\n        // If swap is out of bound\n        if (swapWith >= arr.length || swapWith < 0) {\n            return false;\n        }\n        const swapWithNodeSize = arr[swapWith].nodeSize;\n        [arr[index], arr[swapWith]] = [arr[swapWith], arr[index]];\n        let tr = state.tr;\n        let replaceStart = parentPos;\n        let replaceEnd = $from.end(parentDepth);\n        const slice = new Slice(Fragment.fromArray(arr), 0, 0); // the zeros  lol -- are not depth they are something that represents the opening closing\n        // .toString on slice gives you an idea. for this case we want them balanced\n        tr = tr.step(new ReplaceStep(replaceStart, replaceEnd, slice, false));\n        tr = tr.setSelection(Selection.near(tr.doc.resolve(isDown ? $from.pos + swapWithNodeSize : $from.pos - swapWithNodeSize)));\n        if (dispatch) {\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nconst setSelectionAtEnd = (node) => {\n    return (state, dispatch, _view) => {\n        let pos = node.nodeSize - 1;\n        if (node.type.name === 'doc') {\n            pos = node.content.size - 1;\n        }\n        const tr = state.tr.setSelection(TextSelection.create(state.doc, pos));\n        if (dispatch) {\n            dispatch(tr);\n        }\n        return true;\n    };\n};\nfunction jumpToStartOfNode(type) {\n    return (state, dispatch) => {\n        const current = findParentNodeOfType(type)(state.selection);\n        if (!current) {\n            return false;\n        }\n        if (dispatch) {\n            const { start } = current;\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, start)));\n        }\n        return true;\n    };\n}\nfunction jumpToEndOfNode(type) {\n    return (state, dispatch) => {\n        const current = findParentNodeOfType(type)(state.selection);\n        if (!current) {\n            return false;\n        }\n        if (dispatch) {\n            const { node, start } = current;\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, start + node.content.size)));\n        }\n        return true;\n    };\n}\n\nexport { copyEmptyCommand, cutEmptyCommand, jumpToEndOfNode, jumpToStartOfNode, moveNode, parentHasDirectParentOfType, setSelectionAtEnd };\n", "import * as pmHistory from '@bangle.dev/pm';\nimport { PluginKey, Plugin, keymap, setBlockType, baseKeymap, dropCursor, gapCursor, InputRule, inputRules, undoInputRule, Schema, EditorState, Node, DOMParser, EditorView, DOMSerializer } from '@bangle.dev/pm';\nexport { Plugin, PluginKey } from '@bangle.dev/pm';\nimport { createObject, browser, getParaNodeType, getNodeType, filter, insertEmpty, findParentNodeOfType, bangleWarn, isTestEnv, toHTMLString, objectFilter } from '@bangle.dev/utils';\nimport { parentHasDirectParentOfType, moveNode, jumpToStartOfNode, jumpToEndOfNode, copyEmptyCommand, cutEmptyCommand } from '@bangle.dev/pm-commands';\n\nconst spec$2 = specFactory$2;\nconst name$4 = 'doc';\nfunction specFactory$2({ content = 'block+' } = {}) {\n    return {\n        type: 'node',\n        topNode: true,\n        name: name$4,\n        schema: {\n            content: content,\n        },\n    };\n}\n\nvar doc = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    spec: spec$2\n});\n\nclass PluginGroup {\n    constructor(name, plugins) {\n        this.name = name;\n        this.plugins = plugins;\n    }\n}\n\nconst name$3 = 'editorStateCounter';\nconst plugins$2 = pluginsFactory$2;\nconst docChangedKey = new PluginKey(name$3);\nconst selectionChangedKey = new PluginKey(name$3);\nfunction pluginsFactory$2() {\n    return () => {\n        return new PluginGroup(name$3, [\n            new Plugin({\n                key: docChangedKey,\n                state: {\n                    init(_, _state) {\n                        return 0;\n                    },\n                    apply(tr, pluginState, _oldState, _newState) {\n                        return tr.docChanged ? pluginState + 1 : pluginState;\n                    },\n                },\n            }),\n            new Plugin({\n                key: selectionChangedKey,\n                state: {\n                    init(_, _state) {\n                        return 0;\n                    },\n                    apply(_tr, pluginState, oldState, newState) {\n                        return newState.selection.eq(oldState && oldState.selection)\n                            ? pluginState\n                            : pluginState + 1;\n                    },\n                },\n            }),\n        ]);\n    };\n}\n\nvar editorStateCounter = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    plugins: plugins$2,\n    docChangedKey: docChangedKey,\n    selectionChangedKey: selectionChangedKey\n});\n\nconst plugins$1 = pluginsFactory$1;\nconst commands$1 = {\n    undo,\n    redo,\n};\nconst defaultKeys$1 = {\n    undo: 'Mod-z',\n    redo: 'Mod-y',\n    redoAlt: 'Shift-Mod-z',\n};\nconst name$2 = 'history';\nfunction pluginsFactory$1({ historyOpts = {}, keybindings = defaultKeys$1, } = {}) {\n    return () => {\n        return new PluginGroup(name$2, [\n            pmHistory.history(historyOpts),\n            keybindings &&\n                keymap(createObject([\n                    [keybindings.undo, undo()],\n                    [keybindings.redo, redo()],\n                    [keybindings.redoAlt, redo()],\n                ])),\n        ]);\n    };\n}\nfunction undo() {\n    return pmHistory.undo;\n}\nfunction redo() {\n    return pmHistory.redo;\n}\n\nvar history = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    plugins: plugins$1,\n    commands: commands$1,\n    defaultKeys: defaultKeys$1,\n    undo: undo,\n    redo: redo\n});\n\nconst spec$1 = specFactory$1;\nconst plugins = pluginsFactory;\nconst commands = {\n    convertToParagraph,\n    jumpToStartOfParagraph,\n    jumpToEndOfParagraph,\n    queryIsParagraph,\n    queryIsTopLevelParagraph,\n    insertEmptyParagraphAbove,\n    insertEmptyParagraphBelow,\n};\nconst defaultKeys = {\n    jumpToEndOfParagraph: browser.mac ? 'Ctrl-e' : 'Ctrl-End',\n    jumpToStartOfParagraph: browser.mac ? 'Ctrl-a' : 'Ctrl-Home',\n    moveDown: 'Alt-ArrowDown',\n    moveUp: 'Alt-ArrowUp',\n    emptyCopy: 'Mod-c',\n    emptyCut: 'Mod-x',\n    insertEmptyParaAbove: 'Mod-Shift-Enter',\n    insertEmptyParaBelow: 'Mod-Enter',\n    convertToParagraph: 'Ctrl-Shift-0',\n};\nconst name$1 = 'paragraph';\nfunction specFactory$1() {\n    return {\n        type: 'node',\n        name: name$1,\n        schema: {\n            content: 'inline*',\n            group: 'block',\n            draggable: false,\n            parseDOM: [\n                {\n                    tag: 'p',\n                },\n            ],\n            toDOM: () => ['p', 0],\n        },\n        markdown: {\n            toMarkdown(state, node) {\n                state.renderInline(node);\n                state.closeBlock(node);\n            },\n            parseMarkdown: {\n                paragraph: {\n                    block: 'paragraph',\n                },\n            },\n        },\n    };\n}\nfunction pluginsFactory({ keybindings = defaultKeys } = {}) {\n    return ({ schema }) => {\n        const type = getParaNodeType(schema);\n        // Enables certain command to only work if paragraph is direct child of the `doc` node\n        const isTopLevel = parentHasDirectParentOfType(type, getNodeType(schema, 'doc'));\n        return [\n            keybindings &&\n                keymap(createObject([\n                    [keybindings.convertToParagraph, convertToParagraph()],\n                    [keybindings.moveUp, filter(isTopLevel, moveNode(type, 'UP'))],\n                    [keybindings.moveDown, filter(isTopLevel, moveNode(type, 'DOWN'))],\n                    [keybindings.jumpToStartOfParagraph, jumpToStartOfNode(type)],\n                    [keybindings.jumpToEndOfParagraph, jumpToEndOfNode(type)],\n                    [keybindings.emptyCopy, filter(isTopLevel, copyEmptyCommand(type))],\n                    [keybindings.emptyCut, filter(isTopLevel, cutEmptyCommand(type))],\n                    [\n                        keybindings.insertEmptyParaAbove,\n                        filter(isTopLevel, insertEmpty(type, 'above')),\n                    ],\n                    [\n                        keybindings.insertEmptyParaBelow,\n                        filter(isTopLevel, insertEmpty(type, 'below')),\n                    ],\n                ])),\n        ];\n    };\n}\n// Commands\nfunction convertToParagraph() {\n    return (state, dispatch) => setBlockType(getParaNodeType(state))(state, dispatch);\n}\nfunction queryIsTopLevelParagraph() {\n    return (state) => {\n        const type = getParaNodeType(state);\n        return parentHasDirectParentOfType(type, getNodeType(state, 'doc'))(state);\n    };\n}\nfunction queryIsParagraph() {\n    return (state) => {\n        const type = getParaNodeType(state);\n        return Boolean(findParentNodeOfType(type)(state.selection));\n    };\n}\nfunction insertEmptyParagraphAbove() {\n    return (state, dispatch, view) => {\n        const type = getParaNodeType(state);\n        return filter(parentHasDirectParentOfType(type, getNodeType(state, 'doc')), insertEmpty(type, 'above'))(state, dispatch, view);\n    };\n}\nfunction insertEmptyParagraphBelow() {\n    return (state, dispatch, view) => {\n        const type = getParaNodeType(state);\n        return filter(parentHasDirectParentOfType(type, getNodeType(state, 'doc')), insertEmpty(type, 'below'))(state, dispatch, view);\n    };\n}\nfunction jumpToStartOfParagraph() {\n    return (state, dispatch) => {\n        const type = getParaNodeType(state);\n        return jumpToStartOfNode(type)(state, dispatch);\n    };\n}\nfunction jumpToEndOfParagraph() {\n    return (state, dispatch) => {\n        const type = getParaNodeType(state);\n        return jumpToEndOfNode(type)(state, dispatch);\n    };\n}\n\nvar paragraph = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    spec: spec$1,\n    plugins: plugins,\n    commands: commands,\n    defaultKeys: defaultKeys,\n    convertToParagraph: convertToParagraph,\n    queryIsTopLevelParagraph: queryIsTopLevelParagraph,\n    queryIsParagraph: queryIsParagraph,\n    insertEmptyParagraphAbove: insertEmptyParagraphAbove,\n    insertEmptyParagraphBelow: insertEmptyParagraphBelow,\n    jumpToStartOfParagraph: jumpToStartOfParagraph,\n    jumpToEndOfParagraph: jumpToEndOfParagraph\n});\n\nconst spec = specFactory;\nconst name = 'text';\nfunction specFactory() {\n    return {\n        type: 'node',\n        name,\n        schema: {\n            group: 'inline',\n        },\n        markdown: {\n            toMarkdown(state, node) {\n                state.text(node.text);\n            },\n        },\n    };\n}\n\nvar text = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    spec: spec\n});\n\nfunction pluginLoader(specRegistry, plugins, { metadata, editorProps, defaultPlugins = true, dropCursorOpts, transformPlugins = (p) => p, } = {}) {\n    const schema = specRegistry.schema;\n    const pluginPayload = {\n        schema,\n        specRegistry,\n        metadata: metadata,\n    };\n    let [flatPlugins, pluginGroupNames] = flatten$1(plugins, pluginPayload);\n    if (defaultPlugins) {\n        let defaultPluginGroups = [];\n        if (!pluginGroupNames.has('history')) {\n            defaultPluginGroups.push(plugins$1());\n        }\n        if (!pluginGroupNames.has('editorStateCounter')) {\n            defaultPluginGroups.push(plugins$2());\n        }\n        flatPlugins = flatPlugins.concat(\n        // TODO: deprecate the ability pass a callback to the plugins param of pluginGroup\n        flatten$1(defaultPluginGroups, pluginPayload)[0]);\n        flatPlugins = processInputRules(flatPlugins);\n        flatPlugins.push(keymap(baseKeymap), dropCursor(dropCursorOpts), gapCursor());\n    }\n    if (editorProps) {\n        flatPlugins.push(new Plugin({\n            props: editorProps,\n        }));\n    }\n    flatPlugins = flatPlugins.filter(Boolean);\n    flatPlugins = transformPlugins(flatPlugins);\n    if (flatPlugins.some((p) => !(p instanceof Plugin))) {\n        bangleWarn('You are either using multiple versions of the library or not returning a Plugin class in your plugins. Investigate :', flatPlugins.find((p) => !(p instanceof Plugin)));\n        throw new Error('Invalid plugin');\n    }\n    validateNodeViews(flatPlugins, specRegistry);\n    return flatPlugins;\n}\nfunction processInputRules(plugins, { inputRules: inputRules$1 = true, undoInputRule: undoInputRule$1 = true } = {}) {\n    let newPlugins = [];\n    let match = [];\n    plugins.forEach((plugin) => {\n        if (plugin instanceof InputRule) {\n            match.push(plugin);\n            return;\n        }\n        newPlugins.push(plugin);\n    });\n    if (inputRules$1) {\n        plugins = [\n            ...newPlugins,\n            inputRules({\n                rules: match,\n            }),\n        ];\n    }\n    if (undoInputRule$1) {\n        plugins.push(keymap({\n            Backspace: undoInputRule,\n        }));\n    }\n    return plugins;\n}\nfunction validateNodeViews(plugins, specRegistry) {\n    const nodeViewPlugins = plugins.filter((p) => p.props && p.props.nodeViews);\n    const nodeViewNames = new Map();\n    for (const plugin of nodeViewPlugins) {\n        for (const name of Object.keys(plugin.props.nodeViews)) {\n            if (!specRegistry.schema.nodes[name]) {\n                bangleWarn(`When loading your plugins, we found nodeView implementation for the node '${name}' did not have a corresponding spec. Check the plugin:`, plugin, 'and your specRegistry', specRegistry);\n                throw new Error(`NodeView validation failed. Spec for '${name}' not found.`);\n            }\n            if (nodeViewNames.has(name)) {\n                bangleWarn(`When loading your plugins, we found more than one nodeView implementation for the node '${name}'. Bangle can only have a single nodeView implementation, please check the following two plugins`, plugin, nodeViewNames.get(name));\n                throw new Error(`NodeView validation failed. Duplicate nodeViews for '${name}' found.`);\n            }\n            nodeViewNames.set(name, plugin);\n        }\n    }\n}\nfunction flatten$1(rawPlugins, callbackPayload) {\n    const pluginGroupNames = new Set();\n    const recurse = (plugins) => {\n        if (Array.isArray(plugins)) {\n            return plugins.flatMap((p) => recurse(p)).filter(Boolean);\n        }\n        if (plugins instanceof PluginGroup) {\n            if (pluginGroupNames.has(plugins.name)) {\n                throw new Error(`Duplicate names of pluginGroups ${plugins.name} not allowed.`);\n            }\n            pluginGroupNames.add(plugins.name);\n            return recurse(plugins.plugins);\n        }\n        if (typeof plugins === 'function') {\n            if (!callbackPayload) {\n                throw new Error('Found a function but no payload');\n            }\n            return recurse(plugins(callbackPayload));\n        }\n        return plugins;\n    };\n    return [recurse(rawPlugins), pluginGroupNames];\n}\n\nclass SpecRegistry {\n    constructor(rawSpecs = [], { defaultSpecs = true } = {}) {\n        let flattenedSpecs = flatten(rawSpecs);\n        flattenedSpecs.forEach(validateSpec);\n        const names = new Set(flattenedSpecs.map((r) => r.name));\n        if (flattenedSpecs.length !== names.size) {\n            bangleWarn('The specRegistry has one or more specs with the same name', flattenedSpecs);\n            throw new Error('Duplicate spec error, please check your specRegistry');\n        }\n        if (defaultSpecs) {\n            const defaultSpecsArray = [];\n            if (!names.has('paragraph')) {\n                defaultSpecsArray.unshift(spec$1());\n            }\n            if (!names.has('text')) {\n                defaultSpecsArray.unshift(spec());\n            }\n            if (!names.has('doc')) {\n                defaultSpecsArray.unshift(spec$2());\n            }\n            flattenedSpecs = [...defaultSpecsArray, ...flattenedSpecs];\n        }\n        this._spec = flattenedSpecs;\n        this._schema = createSchema(this._spec);\n        this._options = Object.fromEntries(this._spec\n            .filter((spec) => spec.options)\n            .map((spec) => [spec.name, spec.options]));\n    }\n    get options() {\n        return this._options;\n    }\n    get schema() {\n        return this._schema;\n    }\n    get spec() {\n        return this._spec;\n    }\n}\nfunction createSchema(specRegistry) {\n    let nodes = [];\n    let marks = [];\n    let topNode;\n    for (const spec of specRegistry) {\n        if (spec.type === 'node') {\n            nodes.push([spec.name, spec.schema]);\n            if (spec.topNode === true) {\n                topNode = spec.name;\n            }\n        }\n        else if (spec.type === 'mark') {\n            marks.push([spec.name, spec.schema]);\n        }\n        else {\n            let r = spec;\n            throw new Error('Unknown type: ' + r.type);\n        }\n    }\n    return new Schema({\n        topNode,\n        nodes: Object.fromEntries(nodes),\n        marks: Object.fromEntries(marks),\n    });\n}\nfunction validateSpec(spec) {\n    if (!spec.name) {\n        bangleWarn(\"The spec didn't have a name field\", spec);\n        throw new Error('Invalid spec. Spec must have a name');\n    }\n    if (!['node', 'mark'].includes(spec.type)) {\n        bangleWarn('The spec must be of type node, mark or component ', spec);\n        throw new Error('Invalid spec type');\n    }\n    if (['node', 'mark'].includes(spec.type) && !spec.schema) {\n        bangleWarn(\"The spec of type 'mark' or 'node' must have a schema field\", spec);\n        throw new Error('Invalid spec schema');\n    }\n}\nfunction flatten(data) {\n    const recurse = (d) => {\n        if (Array.isArray(d)) {\n            return d\n                .flatMap((i) => recurse(i))\n                .filter((r) => Boolean(r));\n        }\n        if (d == null || d === false) {\n            return [];\n        }\n        return [d];\n    };\n    return recurse(data);\n}\n\nclass BangleEditorState {\n    constructor({ specRegistry, specs, plugins = () => [], initialValue, editorProps, pmStateOpts, pluginMetadata, dropCursorOpts, } = {}) {\n        if (specs && specRegistry) {\n            throw new Error('Cannot have both specs and specRegistry defined');\n        }\n        if (!specRegistry) {\n            specRegistry = new SpecRegistry(specs);\n        }\n        if (Array.isArray(plugins)) {\n            console.warn('The use plugins as an array is deprecated, please pass a function which returns an array of plugins. Refer: https://bangle.dev/docs/api/core#bangleeditorstate');\n        }\n        this.specRegistry = specRegistry;\n        const schema = this.specRegistry.schema;\n        const pmPlugins = pluginLoader(specRegistry, plugins, {\n            editorProps,\n            metadata: pluginMetadata,\n            dropCursorOpts,\n        });\n        this.pmState = EditorState.create({\n            schema,\n            doc: createDocument({ schema, content: initialValue }),\n            plugins: pmPlugins,\n            ...pmStateOpts,\n        });\n    }\n}\nconst createDocument = ({ schema, content, parseOptions, }) => {\n    const emptyDocument = {\n        type: 'doc',\n        content: [\n            {\n                type: 'paragraph',\n            },\n        ],\n    };\n    if (content == null) {\n        return schema.nodeFromJSON(emptyDocument);\n    }\n    if (content instanceof Node) {\n        return content;\n    }\n    if (typeof content === 'object') {\n        return schema.nodeFromJSON(content);\n    }\n    if (typeof content === 'string') {\n        const element = document.createElement('div');\n        element.innerHTML = content.trim();\n        return DOMParser.fromSchema(schema).parse(element, parseOptions);\n    }\n    return undefined;\n};\n\nclass BangleEditor {\n    constructor(element, { focusOnInit = true, state, pmViewOpts = {}, }) {\n        this.destroyed = false;\n        if (!(state instanceof BangleEditorState)) {\n            throw new Error('state is required and must be an instance of BangleEditorState');\n        }\n        this.view = new EditorView(element, {\n            state: state.pmState,\n            dispatchTransaction: (transaction) => {\n                const newState = this.view.state.apply(transaction);\n                this.view.updateState(newState);\n            },\n            attributes: { class: 'bangle-editor' },\n            ...pmViewOpts,\n        });\n        if (focusOnInit) {\n            this.focusView();\n        }\n    }\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        if (this.view.isDestroyed) {\n            this.destroyed = true;\n            return;\n        }\n        this.destroyed = true;\n        this.view.destroy();\n    }\n    focusView() {\n        if (isTestEnv || this.view.hasFocus()) {\n            return;\n        }\n        this.view.focus();\n    }\n    toHTMLString() {\n        return toHTMLString(this.view.state);\n    }\n}\n\nfunction createElement(spec) {\n    const { dom, contentDOM } = DOMSerializer.renderSpec(window.document, spec);\n    if (contentDOM) {\n        throw new Error('createElement does not support creating contentDOM');\n    }\n    return dom;\n}\n\n/**\n * Creates a bare bone `toDOM` and `parseDOM` handlers for the PM schema.\n * The use case is for nodes or marks who already have a nodeView\n * and want to get basic `toDOM`, `parseDOM` to enable drag n drop or\n * copy paste.\n *\n * @param {*} spec\n * @param {Object} opts\n * @param {string} opts.tag\n * @param {string|0|(node)=>string} opts.content - `0` signals content that PM will inject.\n * @param {string} opts.ignoreAttrs\n * @param {Number} opts.parsingPriority https://prosemirror.net/docs/ref/#model.ParseRule.priority\n */\nfunction domSerializationHelpers(name, { tag = 'div', content, ignoreAttrs = [], parsingPriority = 51, } = {}) {\n    const serializer = (node) => JSON.stringify(objectFilter(node.attrs || {}, (_value, key) => !ignoreAttrs.includes(key)));\n    return {\n        toDOM: (node) => {\n            const domSpec = [\n                tag,\n                {\n                    'data-bangle-name': name,\n                    'data-bangle-attrs': serializer(node),\n                },\n            ];\n            if (content !== undefined) {\n                if (typeof content === 'function') {\n                    domSpec.push(content(node));\n                }\n                else {\n                    domSpec.push(content);\n                }\n            }\n            return domSpec;\n        },\n        parseDOM: [\n            {\n                priority: parsingPriority,\n                tag: `${tag}[data-bangle-name=\"${name}\"]`,\n                getAttrs: (dom) => {\n                    const attrs = dom.getAttribute('data-bangle-attrs');\n                    if (!attrs) {\n                        return {};\n                    }\n                    return JSON.parse(attrs);\n                },\n            },\n        ],\n    };\n}\n\nconst renderHandlersCache = new WeakMap();\nclass BaseNodeView {\n    // for pm to get hold of containerDOM\n    constructor({ node, view, getPos, decorations, containerDOM, contentDOM, \n    // Defaults to whatever is set by the rendering framework which ideally\n    // would have called the method `saveRenderHandlers` before this gets\n    // executed.\n    renderHandlers = getRenderHandlers(view), }, { selectionSensitive = true } = {}) {\n        // by PM\n        this._node = node;\n        this._view = view;\n        this._getPos = getPos;\n        this._decorations = decorations;\n        this._selected = false;\n        if (!renderHandlers) {\n            bangleWarn('It appears the view =', view, ' was not associated with renderHandlers. You are either using nodeViews accidentally or have incorrectly setup nodeViews');\n            throw new Error('You either did not pass the renderHandlers correct or it cannot find render handlers associated with the view.');\n        }\n        this.renderHandlers = renderHandlers;\n        // by the implementor\n        this.containerDOM = containerDOM;\n        this.contentDOM = contentDOM;\n        if (this.contentDOM) {\n            // This css rule makes sure the content dom has non-zero width\n            // so that folks can type inside it\n            this.contentDOM.classList.add('bangle-nv-content');\n        }\n        if (this.containerDOM) {\n            this.containerDOM.classList.add('bangle-nv-container');\n        }\n        if (this._node.type.isAtom && this.contentDOM) {\n            throw new Error('An atom node cannot have a contentDOM');\n        }\n        this.opts = {\n            selectionSensitive,\n        };\n        this.renderHandlers.create(this, this.getNodeViewProps());\n    }\n    // this exists as the name `dom` is too ambiguous\n    get dom() {\n        return this.containerDOM;\n    }\n    getAttrs() {\n        return this._node.attrs;\n    }\n    getNodeViewProps() {\n        return {\n            node: this._node,\n            view: this._view,\n            getPos: this._getPos,\n            decorations: this._decorations,\n            selected: this._selected,\n            attrs: this._node.attrs,\n            updateAttrs: (attrs) => {\n                this._view.dispatch(updateAttrs(this._getPos(), this._node, attrs, this._view.state.tr));\n            },\n        };\n    }\n}\n// TODO this is adds unneeded abstraction\n//    maybe we can lessen the amount of things it is doing\n//    and the abstraction.\nclass NodeView extends BaseNodeView {\n    /**\n     * The idea here is to figure out whether your component\n     * will be hole-y (will let pm put in contents) or be opaque (example emoji).\n     * NOTE: if  passing contentDOM, it is your responsibility to insert it into\n     * containerDOM.\n     * NOTE: when dealing with renderHandlers like .create or .update\n     * donot assume anything about the current state of dom elements. For\n     * example, the dom you created in .create handler, may or may not exist,\n     * when the .update is called.\n     *\n     */\n    static createPlugin({ name, containerDOM: containerDOMSpec, contentDOM: contentDOMSpec, // only for components which need to have editable content\n    renderHandlers, }) {\n        return new Plugin({\n            key: new PluginKey(name + 'NodeView'),\n            props: {\n                nodeViews: {\n                    [name]: (node, view, getPos, decorations) => {\n                        const containerDOM = createElement(containerDOMSpec);\n                        let contentDOM;\n                        if (contentDOMSpec) {\n                            contentDOM = createElement(contentDOMSpec);\n                        }\n                        // getPos for custom marks is boolean\n                        return new NodeView({\n                            node,\n                            view,\n                            getPos,\n                            decorations,\n                            containerDOM,\n                            contentDOM,\n                            renderHandlers,\n                        });\n                    },\n                },\n            },\n        });\n    }\n    deselectNode() {\n        this.containerDOM.classList.remove('ProseMirror-selectednode');\n        this._selected = false;\n        this.renderHandlers.update(this, this.getNodeViewProps());\n    }\n    // }\n    destroy() {\n        this.renderHandlers.destroy(this, this.getNodeViewProps());\n        this.containerDOM = undefined;\n        this.contentDOM = undefined;\n    }\n    // PM essentially works by watching mutation and then syncing the two states: its own and the DOM.\n    ignoreMutation(mutation) {\n        // For PM an atom node is a black box, what happens inside it are of no concern to PM\n        // and should be ignored.\n        if (this._node.type.isAtom) {\n            return true;\n        }\n        // donot ignore a selection type mutation\n        if (mutation.type === 'selection') {\n            return false;\n        }\n        // if a child of containerDOM (the one handled by PM)\n        // has any mutation, do not ignore it\n        if (this.containerDOM.contains(mutation.target)) {\n            return false;\n        }\n        // if the contentDOM itself was the target\n        // do not ignore it. This is important for schema where\n        // content: 'inline*' and you end up delete all the content with backspace\n        // PM needs to step in and create an empty node.\n        if (mutation.target === this.contentDOM) {\n            return false;\n        }\n        return true;\n    }\n    selectNode() {\n        this.containerDOM.classList.add('ProseMirror-selectednode');\n        this._selected = true;\n        this.renderHandlers.update(this, this.getNodeViewProps());\n    }\n    update(node, decorations) {\n        // https://github.com/ProseMirror/prosemirror/issues/648\n        if (this._node.type !== node.type) {\n            return false;\n        }\n        if (this._node === node && this._decorations === decorations) {\n            return true;\n        }\n        this._node = node;\n        this._decorations = decorations;\n        this.renderHandlers.update(this, this.getNodeViewProps());\n        return true;\n    }\n}\nfunction saveRenderHandlers(editorContainer, handlers) {\n    if (renderHandlersCache.has(editorContainer)) {\n        throw new Error('It looks like renderHandlers were already set by someone else.');\n    }\n    renderHandlersCache.set(editorContainer, handlers);\n}\nfunction getRenderHandlers(view) {\n    // TODO this assumes parentNode is one level above root\n    //   lets make sure it always is or rewrite this to\n    //    traverse the ancestry.\n    let editorContainer = view.dom.parentNode;\n    const handlers = renderHandlersCache.get(editorContainer);\n    return handlers;\n}\nfunction updateAttrs(pos, node, newAttrs, tr) {\n    if (pos === undefined) {\n        return tr;\n    }\n    return tr.setNodeMarkup(pos, undefined, {\n        ...node.attrs,\n        ...newAttrs,\n    });\n}\n\n// components\nconst criticalComponents = {\n    doc,\n    paragraph,\n    text,\n    history,\n    editorStateCounter,\n};\n\nexport { BangleEditor, BangleEditorState, NodeView, SpecRegistry, createElement, criticalComponents, doc, domSerializationHelpers, editorStateCounter, getRenderHandlers, history, paragraph, saveRenderHandlers, text };\n"],
  "mappings": "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",
  "names": ["name", "plugins", "undo", "redo", "history", "spec"]
}

import {
  $2baaea4c71418dea$export$294aa081a6c6f55d
} from "./chunk-UKZJP2MO.js";
import {
  $168583247155ddda$export$dc9c12ed27dd1b49
} from "./chunk-JUTNIECC.js";
import {
  $2a25aae57d74318e$export$a05409b8bb224a5a,
  $fb3050f43d946246$export$e32c88dfddc6e1d8
} from "./chunk-AZ6PGSGN.js";
import "./chunk-4ZHG76TE.js";
import {
  $5c3e21d68f1c4674$export$a966af930f325cab
} from "./chunk-YNCXLDXR.js";
import {
  $325a3faab7a68acd$export$a16aca283550c30d
} from "./chunk-4NQHE4XR.js";
import "./chunk-VTAMQHF4.js";
import {
  $507fabe10e71c6fb$export$8397ddfc504fdb9a,
  $507fabe10e71c6fb$export$98e20ec92f614cfe
} from "./chunk-TFXDFSUC.js";
import "./chunk-Y5RF6MJ2.js";
import {
  $3ef42575df84b30b$export$9d1611c77c2fe928,
  $65484d02dcb7eb3e$export$457c3d6518dd4c6f,
  $99facab73266f662$export$5add1d006293d136,
  $bdb11010cef70236$export$f680877a34711e37,
  $ff5963eb1fccf552$export$e08e3b67e392101e
} from "./chunk-EID2ELIQ.js";
import "./chunk-W4UADYUH.js";
import "./chunk-KCNL2KYZ.js";
import {
  require_react
} from "./chunk-UAYAVOPY.js";
import {
  __toESM
} from "./chunk-AUZ3RYOM.js";

// .yarn/__virtual__/@react-aria-select-virtual-cc206d39c5/5/Users/ted/.yarn/berry/cache/@react-aria-select-npm-3.13.1-bb551d5383-10c0.zip/node_modules/@react-aria/select/dist/import.mjs
var import_react = __toESM(require_react(), 1);
function $58aed456727eb0f3$export$e64b2f635402ca43(props, state, ref) {
  let { keyboardDelegate, isDisabled } = props;
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let delegate = (0, import_react.useMemo)(() => keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)(state.collection, state.disabledKeys, null, collator), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    collator
  ]);
  let { menuTriggerProps, menuProps } = (0, $168583247155ddda$export$dc9c12ed27dd1b49)({
    isDisabled,
    type: "listbox"
  }, state, ref);
  let onKeyDown = (e) => {
    switch (e.key) {
      case "ArrowLeft": {
        e.preventDefault();
        let key = state.selectedKey != null ? delegate.getKeyAbove(state.selectedKey) : delegate.getFirstKey();
        if (key)
          state.setSelectedKey(key);
        break;
      }
      case "ArrowRight": {
        e.preventDefault();
        let key = state.selectedKey != null ? delegate.getKeyBelow(state.selectedKey) : delegate.getFirstKey();
        if (key)
          state.setSelectedKey(key);
        break;
      }
    }
  };
  let { typeSelectProps } = (0, $fb3050f43d946246$export$e32c88dfddc6e1d8)({
    keyboardDelegate: delegate,
    selectionManager: state.selectionManager,
    onTypeSelect(key) {
      state.setSelectedKey(key);
    }
  });
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span"
  });
  typeSelectProps.onKeyDown = typeSelectProps.onKeyDownCapture;
  delete typeSelectProps.onKeyDownCapture;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let triggerProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(typeSelectProps, menuTriggerProps, fieldProps);
  let valueId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  return {
    labelProps: {
      ...labelProps,
      onClick: () => {
        if (!props.isDisabled) {
          ref.current.focus();
          (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
        }
      }
    },
    triggerProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      ...triggerProps,
      isDisabled,
      onKeyDown: (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(triggerProps.onKeyDown, onKeyDown, props.onKeyDown),
      onKeyUp: props.onKeyUp,
      "aria-labelledby": [
        valueId,
        triggerProps["aria-labelledby"],
        triggerProps["aria-label"] && !triggerProps["aria-labelledby"] ? triggerProps.id : null
      ].filter(Boolean).join(" "),
      onFocus(e) {
        if (state.isFocused)
          return;
        if (props.onFocus)
          props.onFocus(e);
        if (props.onFocusChange)
          props.onFocusChange(true);
        state.setFocused(true);
      },
      onBlur(e) {
        if (state.isOpen)
          return;
        if (props.onBlur)
          props.onBlur(e);
        if (props.onFocusChange)
          props.onFocusChange(false);
        state.setFocused(false);
      }
    }),
    valueProps: {
      id: valueId
    },
    menuProps: {
      ...menuProps,
      autoFocus: state.focusStrategy || true,
      shouldSelectOnPressUp: true,
      shouldFocusOnHover: true,
      disallowEmptySelection: true,
      linkBehavior: "selection",
      onBlur: (e) => {
        if (e.currentTarget.contains(e.relatedTarget))
          return;
        if (props.onBlur)
          props.onBlur(e);
        if (props.onFocusChange)
          props.onFocusChange(false);
        state.setFocused(false);
      },
      "aria-labelledby": [
        fieldProps["aria-labelledby"],
        triggerProps["aria-label"] && !fieldProps["aria-labelledby"] ? triggerProps.id : null
      ].filter(Boolean).join(" ")
    },
    descriptionProps,
    errorMessageProps
  };
}
function $bdd25dc72710631f$export$f809e80f58e251d1(props, state, triggerRef) {
  let { autoComplete, name, isDisabled } = props;
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  (0, $99facab73266f662$export$5add1d006293d136)(props.selectRef, state.selectedKey, state.setSelectedKey);
  var _state_selectedKey;
  return {
    containerProps: {
      ...visuallyHiddenProps,
      "aria-hidden": true,
      ["data-a11y-ignore"]: "aria-hidden-focus"
    },
    inputProps: {
      type: "text",
      tabIndex: modality == null || state.isFocused || state.isOpen ? -1 : 0,
      style: {
        fontSize: 16
      },
      onFocus: () => triggerRef.current.focus(),
      disabled: isDisabled
    },
    selectProps: {
      tabIndex: -1,
      autoComplete,
      disabled: isDisabled,
      name,
      size: state.collection.size,
      value: (_state_selectedKey = state.selectedKey) !== null && _state_selectedKey !== void 0 ? _state_selectedKey : "",
      onChange: (e) => state.setSelectedKey(e.target.value)
    }
  };
}
function $bdd25dc72710631f$export$cbd84cdb2e668835(props) {
  let { state, triggerRef, label, name, isDisabled } = props;
  let selectRef = (0, import_react.useRef)(null);
  let { containerProps, inputProps, selectProps } = $bdd25dc72710631f$export$f809e80f58e251d1({
    ...props,
    selectRef
  }, state, triggerRef);
  var _state_selectedKey;
  if (state.collection.size <= 300)
    return (0, import_react.default).createElement("div", {
      ...containerProps,
      "data-testid": "hidden-select-container"
    }, (0, import_react.default).createElement("input", inputProps), (0, import_react.default).createElement("label", null, label, (0, import_react.default).createElement("select", {
      ...selectProps,
      ref: selectRef
    }, (0, import_react.default).createElement("option", null), [
      ...state.collection.getKeys()
    ].map((key) => {
      let item = state.collection.getItem(key);
      if (item.type === "item")
        return (0, import_react.default).createElement("option", {
          key: item.key,
          value: item.key
        }, item.textValue);
    }))));
  else if (name)
    return (0, import_react.default).createElement("input", {
      type: "hidden",
      autoComplete: selectProps.autoComplete,
      name,
      disabled: isDisabled,
      value: (_state_selectedKey = state.selectedKey) !== null && _state_selectedKey !== void 0 ? _state_selectedKey : ""
    });
  return null;
}
export {
  $bdd25dc72710631f$export$cbd84cdb2e668835 as HiddenSelect,
  $bdd25dc72710631f$export$f809e80f58e251d1 as useHiddenSelect,
  $58aed456727eb0f3$export$e64b2f635402ca43 as useSelect
};
//# sourceMappingURL=@react-aria_select.js.map
